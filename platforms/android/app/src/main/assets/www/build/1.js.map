{"version":3,"sources":["../../src/pages/home/tabs/TasksMap/TasksMap.module.ts","../../node_modules/leaflet-offline/src/leaflet-offline.js","../../node_modules/leaflet-offline/src/TileLayer.Offline.js","../../node_modules/leaflet-offline/src/Control.Offline.js","../../node_modules/leaflet-rotatedmarker/leaflet.rotatedMarker.js","../../src/pages/home/tabs/TasksMap/TasksMap.ts","../../node_modules/conic-gradient/conic-gradient.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAyC;AACO;AACM;AAChB;AACsC;AAY5E;IAAA;IAAiC,CAAC;IAArB,kBAAkB;QAV9B,+DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAQ;aACT;YACD,OAAO,EAAE;gBACP,sEAAe,CAAC,QAAQ,CAAC,2DAAQ,CAAC;gBAClC,4EAAe,CAAC,QAAQ,EAAE;gBAC1B,uFAAgB;aACjB;SACF,CAAC;OACW,kBAAkB,CAAG;IAAD,yBAAC;CAAA;AAAH;;;;;;;;;AChB/B,gGAAa;;AAEb;AACA,QAAQ,IAA0C;AAClD,QAAQ,iCAAO,CAAC,yBAAqB,EAAE,yBAAmB,CAAC,oCAAE,OAAO;AAAA;AAAA;AAAA,oGAAC;AACrE,KAAK;AACL;AACA;AACA,CAAC;AACD,CAAC;;;;;;;;;ACTD,gGAAa;;AAEb;;AAEA,QAAQ,IAA0C;AAClD,QAAQ,iCAAO,CAAC,wBAAS,CAAC,oCAAE,OAAO;AAAA;AAAA;AAAA,oGAAC;AACpC,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B,mBAAmB,OAAO;AAC1B;AACA,mBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B,mBAAmB,SAAS;AAC5B;AACA,qBAAqB,YAAY;AACjC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA,aAAa;AACb;AACA,aAAa;;AAEb;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B,qBAAqB,OAAO;AAC5B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;;AAEb;AACA,SAAS;;AAET;AACA;AACA;AACA,YAAY,6BAA6B;AACzC;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B,mBAAmB,OAAO;AAC1B,qBAAqB,MAAM;AAC3B;AACA;AACA;AACA;AACA;;AAEA,4CAA4C,EAAE;;AAE9C;AACA;AACA;AACA;;AAEA,0CAA0C,uBAAuB;AACjE,8CAA8C,uBAAuB;AACrE;AACA;;AAEA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;;AAEA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B,qBAAqB,OAAO;AAC5B;AACA;AACA;AACA;;AAEA,8BAA8B,EAAE;AAChC;AACA;AACA;;AAEA;AACA,SAAS;AACT,KAAK;;AAEL;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;AChMD,gGAAa;;AAEb;;AAEA,QAAQ,IAA0C;AAClD,QAAQ,iCAAO,CAAC,wBAAS,CAAC,oCAAE,OAAO;AAAA;AAAA;AAAA,oGAAC;AACpC,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B;AACA,mBAAmB,OAAO;AAC1B;AACA,mBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B,qBAAqB,YAAY;AACjC;AACA;AACA;;AAEA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B;AACA,mBAAmB,OAAO;AAC1B,mBAAmB,OAAO;AAC1B,mBAAmB,YAAY;AAC/B;AACA,mBAAmB,SAAS;AAC5B;AACA,qBAAqB,YAAY;AACjC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,wCAAwC,8BAA8B;AACtE;AACA;;AAEA,2BAA2B,uBAAuB;AAClD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB;;AAEjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA,eAAe,OAAO;AACtB;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;;;ACpLD;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,qCAAqC,2BAA2B,EAAE;AAClE,KAAK;;AAEL;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxDmF;AACnB;AACpC;AACE;AACN;AAE2B;AACE;AAEQ;AAGb;AAEiB;AAEJ;AACM;AACrC;AACP;AAE4C;AAC3B;AACoB;AACK;AACU;AACG;AACE;AAC2B;AAC9D;AACqD;AAElE;AAC2B;AACyC;AAYrG;IAuDE,kBACS,OAAsB,EACtB,SAAoB,EACpB,MAAc,EACb,UAAsB,EACtB,UAAsB,EACtB,UAAsB,EACtB,aAA4B,EAC5B,aA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AC7C,KAAK,CAAC;QACd,CAAC;IACL,CAAC;IAriCc,6CAAoC,GAAW,EAAE,CAAC;IAFzC;QAAvB,gEAAS,CAAC,WAAW,CAAC;kCAAe,yDAAU;kDAAC;IADxC,QAAQ;QAJpB,gEAAS,CAAC;YACT,QAAQ,EAAE,gBAAgB;WACE;SAC7B,CAAC;6EAyD+B;YACX,8DAAS;YACZ,yEAAM;YACD,wFAAU;YACV,0EAAU;YACV,gFAAU;YACP,gFAAa;YACb,iEAAa;YACnB,oFAAO;YACP,yGAAe;YACb,kGAAe;YACH,mEAAqB;YACvC,+DAAK;YACF,KAAM;OArEb,QAAQ,CA2iCpB;IAAD,eAAC;;AAAA;SA3iCY,QAAQ,mB;;;;;;;AC9CrB;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA,wDAAwD;;AAExD;;AAEA,cAAc,qBAAqB;AACnC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAkB,SAAS;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;;AAEA,eAAe,oDAAoD;AACnE,gBAAgB,gBAAgB;AAChC;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA,mDAAmD,sBAAsB;AACzE,EAAE;;AAEF;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA,EAAE;;AAEF;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;;AAEA;AACA;;AAEA,oBAAoB;AACpB;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;;AAEA;AACA;AACA,KAAK;AACL;;AAEA;;AAEA;AACA;;AAEA;AACA,IAAI;;AAEJ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,gCAAgC,YAAY;AAC5C;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,4EAA4E,GAAG;AAC/E;AACA;AACA;AACA,OAAO;AACP,MAAM;AACN;;AAEA;AACA,IAAI;AACJ;AACA,EAAE;AACF","file":"1.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { TasksMap } from './TasksMap';\nimport { ComponentsModule } from '../../../../components/components.module';\n\n@NgModule({\n  declarations: [\n    TasksMap,\n  ],\n  imports: [\n    IonicPageModule.forChild(TasksMap),\n    TranslateModule.forChild(),\n    ComponentsModule\n  ],\n})\nexport class TasksMapPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/home/tabs/TasksMap/TasksMap.module.ts","'use strict';\n\n(function (factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(['./TileLayer.Offline', './Control.Offline'], factory);\n    } else if (typeof exports === 'object' && module.exports) {\n        module.exports = factory(require('./TileLayer.Offline'), require('./Control.Offline'));\n    }\n}(function (TileLayerOffline, ControlOffline) {\n}));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/leaflet-offline/src/leaflet-offline.js\n// module id = 1156\n// module chunks = 0 1","'use strict';\n\n(function (factory, window) {\n\n    if (typeof define === 'function' && define.amd) {\n        define(['leaflet'], factory);\n    } else if (typeof exports === 'object' && module.exports) {\n        module.exports = factory(require('leaflet'));\n    } else if (typeof window !== 'undefined') {\n        if (typeof window.L === 'undefined') {\n            throw 'Leaflet must be loaded first!';\n        }\n        factory(window.L);\n    }\n}(function (L) {\n\n    /**\n     * The Offline Layer should work in the same way as the Tile Layer does\n     * when there are no offline tile images saved.\n     */\n    L.TileLayer.Offline = L.TileLayer.extend({\n\n        /**\n         * Constructor of the layer.\n         * \n         * @param {String} url URL of the tile map provider.\n         * @param {Object} tilesDb An object that implements a certain interface\n         * so it's able to serve as the database layer to save and remove the tiles.\n         * @param {Object} options This is the same options parameter as the Leaflet\n         * Tile Layer, there are no additional parameters. Check their documentation\n         * for up-to-date information.\n         */\n        initialize: function (url, tilesDb, options) {\n            this._url = url;\n            this._tilesDb = tilesDb;\n\n            options = L.Util.setOptions(this, options);\n\n            if (options.detectRetina && L.Browser.retina && options.maxZoom > 0) {\n                options.tileSize = Math.floor(options.tileSize / 2);\n\n                if (!options.zoomReverse) {\n                    options.zoomOffset++;\n                    options.maxZoom--;\n                } else {\n                    options.zoomOffset--;\n                    options.minZoom++;\n                }\n\n                options.minZoom = Math.max(0, options.minZoom);\n            }\n\n            if (typeof options.subdomains === 'string') {\n                options.subdomains = options.subdomains.split('');\n            }\n\n            if (!L.Browser.android) {\n                this.on('tileunload', this._onTileRemove);\n            }\n        },\n\n        /**\n         * Overrides the method from the Tile Layer. Loads a tile given its\n         * coordinates.\n         * \n         * @param {Object} coords Coordinates of the tile.\n         * @param {Function} done A callback to be called when the tile has been\n         * loaded.\n         * @returns {HTMLElement} An <img> HTML element with the appropriate\n         * image URL.\n         */\n        createTile: function (coords, done) {\n            var tile = document.createElement('img');\n\n            L.DomEvent.on(tile, 'load', L.bind(this._tileOnLoad, this, done, tile));\n            L.DomEvent.on(tile, 'error', L.bind(this._tileOnError, this, done, tile));\n\n            if (this.options.crossOrigin) {\n                tile.crossOrigin = '';\n            }\n\n            tile.alt = '';\n\n            tile.setAttribute('role', 'presentation');\n\n            this.getTileUrl(coords).then(function (url) {\n                tile.src = url;\n            }).catch(function (err) {\n                throw err;\n            });\n\n            return tile;\n        },\n\n        /**\n         * Overrides the method from the Tile Layer. Returns the URL for a tile\n         * given its coordinates. It tries to get the tile image offline first,\n         * then if it fails, it falls back to the original Tile Layer\n         * implementation.\n         * \n         * @param {Object} coords Coordinates of the tile.\n         * @returns {String} The URL for a tile image.\n         */\n        getTileUrl: function (coords) {\n            var url = L.TileLayer.prototype.getTileUrl.call(this, coords);\n            var dbStorageKey = this._getStorageKey(url);\n\n            var resultPromise = this._tilesDb.getItem(dbStorageKey).then(function (data) {\n                if (data && typeof data === 'object') {\n                    return URL.createObjectURL(data);\n                }\n                return url;\n            }).catch(function (err) {\n                throw err;\n            });\n\n            return resultPromise;\n        },\n\n        /**\n         * Gets the URLs for all the tiles that are inside the given bounds.\n         * Every element of the result array is in this format:\n         * {key: <String>, url: <String>}. The key is the key used on the\n         * database layer to find the tile image offline. The URL is the\n         * location from where the tile image will be downloaded.\n         * \n         * @param {Object} bounds The bounding box of the tiles.\n         * @param {Number} zoom The zoom level of the bounding box.\n         * @returns {Array} An array containing all the URLs inside the given\n         * bounds.\n         */\n        getTileUrls: function (bounds, zoom) {\n            var tiles = [];\n            var originalurl = this._url;\n\n            this.setUrl(this._url.replace('{z}', zoom), true);\n\n            var tileBounds = L.bounds(\n                bounds.min.divideBy(this.getTileSize().x).floor(),\n                bounds.max.divideBy(this.getTileSize().x).floor()\n            );\n\n            for (var i = tileBounds.min.x; i <= tileBounds.max.x; i++) {\n                for (var j = tileBounds.min.y; j <= tileBounds.max.y; j++) {\n                    var tilePoint = new L.Point(i, j);\n                    var url = L.TileLayer.prototype.getTileUrl.call(this, tilePoint);\n\n                    tiles.push({\n                        'key': this._getStorageKey(url),\n                        'url': url,\n                    });\n                }\n            }\n\n            this.setUrl(originalurl, true);\n\n            return tiles;\n        },\n\n        /**\n         * Determines the key that will be used on the database layer given\n         * a URL.\n         * \n         * @param {String} url The URL of a tile image.\n         * @returns {String} The key that will be used on the database layer\n         * to find a tile image.\n         */\n        _getStorageKey: function (url) {\n            var key = null;\n\n            if (url.indexOf('{s}')) {\n                var regexstring = new RegExp('[' + this.options.subdomains.join('|') + ']\\.');\n                key = url.replace(regexstring, this.options.subdomains['0'] + '.');\n            }\n\n            return key || url;\n        },\n    });\n\n    /**\n     * Factory function as suggested by the Leaflet team.\n     * \n     * @param {String} url URL of the tile map provider.\n     * @param {Object} tilesDb An object that implements a certain interface\n     * so it's able to serve as the database layer to save and remove the tiles.\n     * @param {Object} options This is the same options parameter as the Leaflet\n     * Tile Layer, there are no additional parameters. Check their documentation\n     * for up-to-date information.\n     */\n    L.tileLayer.offline = function (url, tilesDb, options) {\n        return new L.TileLayer.Offline(url, tilesDb, options);\n    };\n}, window));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/leaflet-offline/src/TileLayer.Offline.js\n// module id = 1157\n// module chunks = 0 1","'use strict';\n\n(function (factory, window) {\n\n    if (typeof define === 'function' && define.amd) {\n        define(['leaflet'], factory);\n    } else if (typeof exports === 'object' && module.exports) {\n        module.exports = factory(require('leaflet'));\n    } else if (typeof window !== 'undefined') {\n        if (typeof window.L === 'undefined') {\n            throw 'Leaflet must be loaded first!';\n        }\n        factory(window.L);\n    }\n}(function (L) {\n\n    /**\n     * The Offline Control to be used together with the Offline Layer.\n     */\n    L.Control.Offline = L.Control.extend({\n        options: {\n            position: 'topleft',\n            saveButtonHtml: 'S',\n            saveButtonTitle: 'Save tiles',\n            removeButtonHtml: 'R',\n            removeButtonTitle: 'Remove tiles',\n            minZoom: 0,\n            maxZoom: 19,\n            confirmSavingCallback: null,\n            confirmRemovalCallback: null\n        },\n\n        /**\n         * Constructor of the control.\n         * \n         * @param {Object} baseLayer The Offline Layer to work together with the\n         * control.\n         * @param {Object} tilesDb An object that implements a certain interface\n         * so it's able to serve as the database layer to save and remove the tiles.\n         * @param {Object} options This is the same parameter as the Leaflet\n         * Control, but it has some additions. Check the README for more.\n         */\n        initialize: function (baseLayer, tilesDb, options) {\n            this._baseLayer = baseLayer;\n            this._tilesDb = tilesDb;\n\n            L.Util.setOptions(this, options);\n        },\n\n        /**\n         * Creates the container DOM element for the control and add listeners\n         * on relevant map events.\n         * \n         * @param {Object} map The Leaflet map.\n         * @returns {HTMLElement} The DOM element for the control.\n         */\n        onAdd: function (map) {\n            var container = L.DomUtil.create('div', 'leaflet-control-offline leaflet-bar');\n\n            this._createButton(this.options.saveButtonHtml, this.options.saveButtonTitle, 'save-tiles-button', container, this._saveTiles);\n            this._createButton(this.options.removeButtonHtml, this.options.removeButtonTitle, 'remove-tiles-button', container, this._removeTiles);\n\n            return container;\n        },\n\n        /**\n         * Auxiliary method that creates a button DOM element.\n         * \n         * @param {String} html The HTML that will be used inside the button\n         * DOM element.\n         * @param {String} title The title of the button DOM element.\n         * @param {String} className The class name for the button DOM element.\n         * @param {HTMLElement} container The container DOM element for the\n         * buttons.\n         * @param {Function} fn A function that will be executed when the button\n         * is clicked.\n         * @returns {HTMLElement} A button DOM element.\n         */\n        _createButton: function (html, title, className, container, fn) {\n            var link = L.DomUtil.create('a', className, container);\n            link.innerHTML = html;\n            link.href = '#';\n            link.title = title;\n\n            L.DomEvent.disableClickPropagation(link);\n            L.DomEvent.on(link, 'click', L.DomEvent.stop);\n            L.DomEvent.on(link, 'click', fn, this);\n            L.DomEvent.on(link, 'click', this._refocusOnMap, this);\n\n            return link;\n        },\n\n        /**\n         * The function executed when the button to save tiles is clicked.\n         */\n        _saveTiles: function () {\n            var self = this;\n\n            var bounds = null;\n            var zoomLevels = [];\n            var tileUrls = [];\n            var currentZoom = this._map.getZoom();\n            var latlngBounds = this._map.getBounds();\n\n            if (currentZoom < this.options.minZoom) {\n                self._baseLayer.fire('offline:below-min-zoom-error');\n\n                return;\n            }\n\n            for (var zoom = currentZoom; zoom <= this.options.maxZoom; zoom++) {\n                zoomLevels.push(zoom);\n            }\n\n            for (var i = 0; i < zoomLevels.length; i++) {\n                bounds = L.bounds(this._map.project(latlngBounds.getNorthWest(), zoomLevels[i]),\n                    this._map.project(latlngBounds.getSouthEast(), zoomLevels[i]));\n                tileUrls = tileUrls.concat(this._baseLayer.getTileUrls(bounds, zoomLevels[i]));\n            }\n\n            var continueSaveTiles = function () {\n                self._baseLayer.fire('offline:save-start', {\n                    nTilesToSave: tileUrls.length\n                });\n\n                self._tilesDb.saveTiles(tileUrls).then(function () {\n                    self._baseLayer.fire('offline:save-end');\n                }).catch(function (err) {\n                    self._baseLayer.fire('offline:save-error', {\n                        error: err\n                    });\n                });\n            };\n\n            if (this.options.confirmSavingCallback) {\n                this.options.confirmSavingCallback(tileUrls.length, continueSaveTiles);\n            } else {\n                continueSaveTiles();\n            }\n        },\n\n        /**\n         * The function executed when the button to remove tiles is clicked.\n         */\n        _removeTiles: function () {\n            var self = this;\n\n            var continueRemoveTiles = function () {\n                self._baseLayer.fire('offline:remove-start');\n\n                self._tilesDb.clear().then(function () {\n                    self._baseLayer.fire('offline:remove-end');\n                }).catch(function (err) {\n                    self._baseLayer.fire('offline:remove-error', {\n                        error: err\n                    });\n                });\n            };\n\n            if (self.options.confirmRemovalCallback) {\n                self.options.confirmRemovalCallback(continueRemoveTiles);\n            } else {\n                continueRemoveTiles();\n            }\n        }\n    });\n\n    /**\n     * Factory function as suggested by the Leaflet team.\n     * \n     * @param {Object} baseLayer The Offline Layer to work together with the\n     * control.\n     * @param {Object} tilesDb An object that implements a certain interface\n     * so it's able to serve as the database layer to save and remove the tiles.\n     * @param {Object} options This is the same parameter as the Leaflet\n     * Control, but it has some additions. Check the README for more.\n     */\n    L.control.offline = function (baseLayer, tilesDb, options) {\n        return new L.Control.Offline(baseLayer, tilesDb, options);\n    };\n}, window));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/leaflet-offline/src/Control.Offline.js\n// module id = 1158\n// module chunks = 0 1","(function() {\r\n    // save these original methods before they are overwritten\r\n    var proto_initIcon = L.Marker.prototype._initIcon;\r\n    var proto_setPos = L.Marker.prototype._setPos;\r\n\r\n    var oldIE = (L.DomUtil.TRANSFORM === 'msTransform');\r\n\r\n    L.Marker.addInitHook(function () {\r\n        var iconOptions = this.options.icon && this.options.icon.options;\r\n        var iconAnchor = iconOptions && this.options.icon.options.iconAnchor;\r\n        if (iconAnchor) {\r\n            iconAnchor = (iconAnchor[0] + 'px ' + iconAnchor[1] + 'px');\r\n        }\r\n        this.options.rotationOrigin = this.options.rotationOrigin || iconAnchor || 'center bottom' ;\r\n        this.options.rotationAngle = this.options.rotationAngle || 0;\r\n\r\n        // Ensure marker keeps rotated during dragging\r\n        this.on('drag', function(e) { e.target._applyRotation(); });\r\n    });\r\n\r\n    L.Marker.include({\r\n        _initIcon: function() {\r\n            proto_initIcon.call(this);\r\n        },\r\n\r\n        _setPos: function (pos) {\r\n            proto_setPos.call(this, pos);\r\n            this._applyRotation();\r\n        },\r\n\r\n        _applyRotation: function () {\r\n            if(this.options.rotationAngle) {\r\n                this._icon.style[L.DomUtil.TRANSFORM+'Origin'] = this.options.rotationOrigin;\r\n\r\n                if(oldIE) {\r\n                    // for IE 9, use the 2D rotation\r\n                    this._icon.style[L.DomUtil.TRANSFORM] = 'rotate(' + this.options.rotationAngle + 'deg)';\r\n                } else {\r\n                    // for modern browsers, prefer the 3D accelerated version\r\n                    this._icon.style[L.DomUtil.TRANSFORM] += ' rotateZ(' + this.options.rotationAngle + 'deg)';\r\n                }\r\n            }\r\n        },\r\n\r\n        setRotationAngle: function(angle) {\r\n            this.options.rotationAngle = angle;\r\n            this.update();\r\n            return this;\r\n        },\r\n\r\n        setRotationOrigin: function(origin) {\r\n            this.options.rotationOrigin = origin;\r\n            this.update();\r\n            return this;\r\n        }\r\n    });\r\n})();\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/leaflet-rotatedmarker/leaflet.rotatedMarker.js\n// module id = 1159\n// module chunks = 0 1","import { Component, ViewChild, ElementRef, OnInit, OnDestroy } from '@angular/core';\nimport {Events, IonicPage, NavController, NavParams} from 'ionic-angular';\nimport * as L from 'leaflet';\nimport 'leaflet.markercluster';\nimport 'leaflet-offline';\n\nimport { Helper } from '../../../../classes/Helper';\nimport { tilesDb } from '../../../../classes/tilesDb';\n\nimport { OrmService } from '../../../../services/orm-service';\nimport { Route } from '../../../../entity/Route';\nimport { Task } from '../../../../entity/Task';\nimport { Score } from '../../../../entity/Score';\n\nimport { DeepLinker } from 'ionic-angular/navigation/deep-linker';\n\nimport { GpsService} from  '../../../../services/gps-service';\nimport { ModalsService } from '../../../../services/modals-service';\nimport 'leaflet-rotatedmarker';\nimport 'conic-gradient';\n\nimport { ImagesService } from '../../../../services/images-service';\nimport { Storage } from '@ionic/storage';\nimport { SpinnerDialog } from '@ionic-native/spinner-dialog';\nimport {MCMModalType, MyApp} from \"../../../../app/app.component\";\nimport { MCMIconModal } from \"../../../../modals/MCMIconModal/MCMIconModal\";\nimport { MCMIntroModal } from \"../../../../modals/MCMIntroModal/MCMIntroModal\";\nimport { ModalController} from \"ionic-angular/components/modal/modal-controller\";\nimport { MCMSessionFinishedModal} from \"../../../../modals/MCMSessionFinishedModal/MCMSessionFinishedModal\";\nimport { ChatPage } from \"../../../chat/chat\";\nimport { ChatAndSessionService, SessionInfo } from '../../../../services/chat-and-session-service';\nimport { Subscription } from 'rxjs/Subscription';\nimport * as moment from 'moment';\nimport {Observable} from \"../../../../../node_modules/rxjs\";\nimport {MCMTrailFinishedModal} from \"../../../../modals/MCMTrailFinishedModal/MCMTrailFinishedModal\";\nimport {polyline} from \"leaflet\";\n// import * as mapboxgl from 'mapbox-gl/dist/mapbox-gl.js';\n// import 'mapbox-gl-leaflet/leaflet-mapbox-gl.js';\n\ndeclare var ConicGradient: any;\n\n@IonicPage({\n  segment: 'TasksMap/:routeId'\n})\n@Component({\n  selector: 'page-tasks-map',\n  templateUrl: 'TasksMap.html'\n})\nexport class TasksMap implements OnInit, OnDestroy {\n    @ViewChild('tasks-map') mapContainer: ElementRef;\n\n    private static UPDATE_SESSION_TIME_INTERVAL_IN_SECS: number = 15;\n\n  private map: any;\n  private routeId: number;\n  private route: Route;\n  private taskList: Task[];\n\n  private state: TaskMapState = {\n      selectedTask: null,\n      isShowingAllTasks: false,\n      visibleTasks : {},\n      skippedTaskIds: [],\n      selectedStartTask: false,\n      showIntroModal: false,\n      showGuidedTrailModal: false\n  };\n  private score: Score;\n  private stateKey: string = \"savedMapStateByRoute\";\n  private taskToSkip: Task= null;\n  private gamificationIsDisabled = false;\n\n    taskOpenIcon;\n    taskSkippedIcon;\n    taskDoneIcon;\n    taskDonePerfectIcon;\n    taskFailedIcon;\n    taskSavedIcon;\n\n    userPositionIcon;\n    userPositionArrow;\n    userMarker: any;\n    prevPos: any;\n    isUserInsideMap: boolean = true;\n\n    currentScore: any;\n    user = null;\n    private sessionInfo: SessionInfo;\n    private sessionSubscription: Subscription;\n    private watchSubscription: Subscription;\n\n    private countdownOrTimerForSession: number;\n    private countdownBeforeSession: boolean = false;\n    private startInterval: boolean = false;\n    private showCountdownOrTimer: boolean = false;\n    //private refreshIntervalId: any = null;\n    private showSessionEnds: boolean = false;\n    private taskBlocked: boolean = false;\n\n    private sessionTimeTimer = Observable.interval(TasksMap.UPDATE_SESSION_TIME_INTERVAL_IN_SECS * 1000);\n    private sessionTimeSubscription: Subscription;\n    private redrawingMarkers = false;\n\n  constructor(\n    public navCtrl: NavController,\n    public navParams: NavParams,\n    public events: Events,\n    private ormService: OrmService,\n    private deepLinker: DeepLinker,\n    private gpsService: GpsService,\n    private modalsService: ModalsService,\n    private imagesService: ImagesService,\n    private storage: Storage,\n    private spinner: SpinnerDialog,\n    private modalCtrl: ModalController,\n    private chatAndSessionService: ChatAndSessionService,\n    private app: MyApp,\n    private helper: Helper\n  ) {\n\n      /*this.userPositionIcon = L.icon({iconUrl:\"./assets/icons/icon_mapposition.png\" , iconSize: [100, 100], iconAnchor: [50, 50], className:'marker userPosition'});       //, shadowUrl: './assets/icons/icon_mapposition-shadow.png', shadowSize: [38, 41]});\n      this.taskOpenIcon = L.icon({iconUrl:'assets/icons/icon_taskmarker-open.png' , iconSize: [35, 48], iconAnchor: [17.5, 43], className:'marker'});\n      this.taskOpenIcon.clusterColor = '#036D99';\n      this.taskSkippedIcon = L.icon({iconUrl:'assets/icons/icon_taskmarker-skipped.png' , iconSize: [35, 48], iconAnchor: [17.5, 43], className:'marker'});\n      this.taskSkippedIcon.clusterColor = '#B2B2B2';\n      this.taskDoneIcon = L.icon({iconUrl:'assets/icons/icon_taskmarker-done.png' , iconSize: [35, 48], iconAnchor: [17.5, 43], className:'marker'});\n      this.taskDoneIcon.clusterColor = '#F3B100';\n      this.taskDonePerfectIcon = L.icon({iconUrl:'assets/icons/icon_taskmarker-done-perfect.png' , iconSize: [35, 48], iconAnchor: [17.5, 43], className:'marker'});\n      this.taskDonePerfectIcon.clusterColor = '#4CAF50';\n      this.taskFailedIcon = L.icon({iconUrl:'assets/icons/icon_taskmarker-failed.png' , iconSize: [35, 48], iconAnchor: [17.5, 43], className:'marker'});\n      this.taskFailedIcon.clusterColor = '#E62B25';*/\n      this.chatAndSessionService.init();\n      this.events.subscribe('user:kicked', (user) => {\n          if(user == 'self'){\n              console.log(\"userKicked\");\n              this.sessionKicked();\n              this.events.unsubscribe('user:kicked', null);\n          }\n          else{\n              console.log(\"Someone else was kicked.\")\n          }\n      });\n      this.events.subscribe('session:updated', (sessionInfo) => {\n         console.log('Session has been updated');\n          this.updateSession(sessionInfo);\n      });\n      this.events.subscribe('user:assigned_task', (taskId) => {\n          console.log('User has been assigned task with id: ' + taskId);\n          this.sessionInfo.sessionUser.assigned_task_id = taskId;\n          this.forceStartFromTask(taskId).then(() => {\n              this.redrawMarker();\n          });\n      });\n  }\n\n  isTrailCompleted(){\n      if (this.route.isAnswerFeedbackEnabled()) {\n          return (this.taskList && this.score.getTasksSolved().length + this.score.getTasksSolvedLow().length + this.score.getTasksFailed().length == this.taskList.length);\n      } else {\n          return this.score.getTasksSaved() && this.score.getTasksSaved().length == this.taskList.length;\n      }\n  }\n\n  showTrailCompletedAlert(){\n      let that = this;\n      let modal = this.modalCtrl.create(MCMTrailFinishedModal,\n          {\n              score: this.score,\n              tasks: this.taskList,\n              narrative: this.app.activeNarrative,\n              callback: function() {\n                  modal.dismiss().then(() => {\n                      that.route.completed = true;\n                      that.route.completedDate = new Date().toDateString().split(' ').slice(1).join(' ');\n                      that.ormService.saveAndFireChangedEvent(that.route);\n                  });\n              }\n          }, {cssClass: this.app.activeNarrative});\n      modal.present();\n      // let that = this;\n      // let title = 'a_alert_congrats';\n      // let message = 'a_alert_congrats_msg';\n      // if (this.route.isNarrativeEnabled()) {\n      //   title = this.route.getNarrativeString(title);\n      //   message = this.route.getNarrativeString(message);\n      // }\n      // let modal = this.modalCtrl.create(MCMIconModal,  {\n      //     title: title,\n      //     message: message,\n      //     modalType: MCMModalType.solved,\n      //     param: {TITLE: this.route.title},\n      //     narrativeEnabled: this.route.isNarrativeEnabled(),\n      //     narrative: this.app.activeNarrative,\n      //     buttons: [\n      //         {\n      //             title: 'a_alert_close',\n      //             callback: function(){\n      //                 modal.dismiss().then(() => {\n      //                     that.route.completed = true;\n      //                     that.route.completedDate = new Date().toDateString().split(' ').slice(1).join(' ');\n      //                     that.ormService.saveAndFireChangedEvent(that.route);\n      //                 });\n      //             }\n      //         }\n      //     ]}, {showBackdrop: true, enableBackdropDismiss: true, cssClass: this.app.activeNarrative});\n      // modal.present();\n  }\n\n\n  async ionViewWillEnter() {\n    console.log('TasksMap ionViewWillEnter()');\n    console.log(this.navCtrl);\n    this.routeId = this.navParams.get('routeId');\n    console.log(this.routeId);\n    this.route = await this.ormService.findRouteById(this.routeId);\n    this.gamificationIsDisabled = this.route.isGamificationDisabled();\n    this.user = await this.ormService.getActiveUser();\n    this.score = this.route.getScoreForUser(this.user);\n    let sessionInfo = this.chatAndSessionService.getSessionInfo();\n    this.updateSession(sessionInfo);\n    this.events.publish('narrativeChange', this.route.getNarrativeName());\n\n    this.updateIcons();\n\n      await this.loadMap();\n      setTimeout(async () => {\n          // adding markers immediately after map initialization caused marker cluster problems -> use timeout\n          await this.initializeMap();\n          this.spinner.hide();\n          if(this.isTrailCompleted() && !this.route.completed){\n              this.showTrailCompletedAlert();\n          }\n      }, 100);\n  }\n\n  async ionViewDidEnter(){\n      console.log('TasksMap ionViewDidEnter()');\n      /*\n      When a session is active and started the first time:\n      Reset all tasks\n      If user was automatically assigned a task, display only that task\n       */\n      if(this.sessionInfo != null) {\n          // Add event of user entering trail when session active\n          let details = JSON.stringify({});\n          this.chatAndSessionService.addUserEvent(\"event_trail_opened\", details, \"0\");\n\n          if (this.sessionInfo.started === false) {\n              this.showAllTasks();\n              this.resetTasks();\n\n              if (this.sessionInfo.sessionUser.assigned_task_id != 0) {\n                  this.taskList = await this.route.getTasks();\n                  await this.forceStartFromTask(this.sessionInfo.sessionUser.assigned_task_id);\n                  if (this.route.isNarrativeEnabled()) {\n                      this.showIntroModal().then(() => {\n                          this.state.showIntroModal = false;\n                      })\n                  }\n              }\n              else {\n                  if (this.route.isNarrativeEnabled()) {\n                      this.showIntroModal().then(() => {\n                          this.state.showIntroModal = false;\n                          this.showGuidedTrailModalWithDelay(500);\n                      })\n                  }\n              }\n\n              this.saveMapStateToLocalStorage();\n              this.sessionInfo.started = true;\n              await this.chatAndSessionService.updateSession(this.sessionInfo);\n              await this.redrawMarker();\n              return;\n          }\n      }\n\n      if (this.navParams.data.tasksMapState) {\n          console.log(\"3\");\n          this.state = this.navParams.data.tasksMapState;\n          if(this.taskToSkip || (this.state.selectedStartTask && (this.score.getTasksSolved().indexOf(this.state.selectedTask.id) > -1 || this.score.getTasksSolvedLow().indexOf(this.state.selectedTask.id) > -1))){\n              this.goToNextTask(this.state.selectedTask, true);\n          }\n      } else {\n          this.state = await this.getMapStateFromLocalStorage();\n          console.log(this.state);\n          if(this.taskToSkip){\n              this.goToNextTask(this.taskToSkip, true);\n              this.taskToSkip = null;\n          }\n          if(!this.state){\n              // attach state to navParams so that state is restored when moving back in history (from task detail view)\n              this.state = this.navParams.data.tasksMapState = {\n                  selectedTask: this.navParams.get(\"selectedTask\"),\n                  isShowingAllTasks: false,\n                  visibleTasks: {},\n                  skippedTaskIds: [],\n                  selectedStartTask: false,\n                  showIntroModal: false, // Intro Modal for narratives will be displayed on first start anyway\n                  showGuidedTrailModal: false // GuidedTrail Modal will be displayed on first start anyway\n              };\n              this.state.isShowingAllTasks = !this.state.selectedTask;\n              if (this.state.selectedTask) {\n                  this.state.visibleTasks[this.state.selectedTask.position] = true;\n              }\n              else if (this.route.isNarrativeEnabled()) {\n                  this.showIntroModal().then(() => {\n                      this.showGuidedTrailModalWithDelay(500);\n                  });\n              }\n              else {\n                  this.showGuidedTrailModalWithDelay(500);\n              }\n          }\n          else{\n              if(this.state.showIntroModal && this.route.isNarrativeEnabled()){\n                  this.showIntroModal().then(() => {\n                      const that = this;\n                      that.state.showIntroModal = false;\n                      this.saveMapStateToLocalStorage();\n                      if(this.state.showGuidedTrailModal){\n                          this.showGuidedTrailModalWithDelay(500);\n                      }\n                  });\n              }else if(this.state.showGuidedTrailModal){\n                  this.showGuidedTrailModalWithDelay(500);\n              }\n          }\n      }\n      await this.redrawMarker();\n  }\n\n  private showGuidedTrailModalWithDelay(delay) {\n      const that = this;\n      this.state.showGuidedTrailModal = false;\n      setTimeout(function () {\n          that.modalsService.showDialog('a_guided_trail_title', 'a_guided_trail',\n              'no', () => {\n              },\n              'yes', async () => {\n                  that.selectStartPoint();\n                  that.state.selectedStartTask = true;\n              }, that.app.activeNarrative);\n      }, delay);\n  }\n\n  private async forceStartFromTask( taskId ){\n      if (!this.taskList || this.taskList.length === 0) {\n          this.taskList = await this.route.getTasks();\n      }\n      console.log('Force Start From Task', this.taskList);\n      let selectedTask = this.taskList.filter(x => x.id == taskId).pop();\n      this.state.selectedTask = selectedTask;\n      console.debug(\"forceStartFromTask\");\n      this.state.visibleTasks = {};\n      this.state.visibleTasks[selectedTask.position] = true;\n      this.state.isShowingAllTasks = false;\n      this.state.showGuidedTrailModal = false;\n      this.centerSelectedTask();\n  }\n\n    ngOnInit() {\n        // this.sessionSubscription = this.chatAndSessionService.getSubject().subscribe(this.updateSession);\n    }\n\n    ngOnDestroy() {\n        if (this.sessionSubscription) {\n            this.sessionSubscription.unsubscribe();\n            this.sessionSubscription = null;\n        }\n        if (this.watchSubscription) {\n            this.watchSubscription.unsubscribe();\n            this.watchSubscription = null;\n        }\n\n        // Unsubscribe events:\n        this.events.unsubscribe('user:kicked');\n        this.events.unsubscribe('session:updated');\n        this.events.unsubscribe('user:assigned_task');\n        this.events.publish('narrativeChange', 'default');\n    }\n\n  markerGroup: any = null;\n  pathGroup: any = null;\n\n   async initializeMap() {\n      this.currentScore = this.score.score;\n      // await this.redrawMarker();\n      this.gpsService.isLocationOn();\n      // This should fix the gray tiles and missing marker issue on android\n      if(this.map != null){\n          this.map.invalidateSize();\n      }\n  }\n\n    updateSession(sessionInfo: SessionInfo) {\n       console.log(this.routeId);\n       console.log(sessionInfo);\n        if (sessionInfo && sessionInfo.session) {\n            if (this.routeId != sessionInfo.session.trail_id) {\n                console.log(`active session belongs to different trail`);\n                this.sessionInfo = null;\n            } else {\n                this.sessionInfo = sessionInfo;\n                console.log('active session: ' + sessionInfo.session.code);\n                if(this.sessionTimeSubscription){\n                    this.sessionTimeSubscription.unsubscribe();\n                }\n                this.sessionTime();\n                this.sessionTimeSubscription = this.sessionTimeTimer.subscribe(tick => {\n                    this.sessionTime();\n                });\n            }\n        } else {\n            console.log('no active session');\n            this.sessionInfo = null;\n        }\n    }\n\n    async getMapStateFromLocalStorage(){\n      let mapState = await this.storage.get(this.stateKey);\n      if(mapState && mapState[this.routeId]){\n          let state = mapState[this.routeId];\n          console.log(this.navParams);\n          state.selectedTask = this.navParams.get(\"selectedTask\");\n          return state;\n      }\n      return null;\n  }\n\n  async saveMapStateToLocalStorage(){\n      let mapState = await this.storage.get(this.stateKey);\n      if(!mapState){\n          mapState = {};\n      }\n      mapState[this.routeId] = this.state;\n      return this.storage.set(this.stateKey, mapState);\n  }\n\n  async ionViewWillLeave(){\n    this.saveMapStateToLocalStorage();\n  }\n\n    assignedTask(){\n       if(this.sessionInfo == null){\n           return false\n       }else{\n           return this.sessionInfo.session.assign_tasks;\n       }\n    }\n\n\n  async redrawMarker(){\n    if (this.redrawingMarkers) {\n        return;\n    }\n    this.redrawingMarkers = true;\n    if (!this.map) {\n      return;\n    }\n    if (this.markerGroup != null) {\n        console.warn('removing markerGroup');\n        this.map.removeLayer(this.markerGroup);\n        this.markerGroup = null;\n    }\n    if (this.pathGroup != null) {\n        console.warn('removing pathGroup');\n        for (let layer of this.pathGroup) {\n            this.map.removeLayer(layer);\n        }\n        this.pathGroup = null;\n    }\n    // this.map.eachLayer(layer => {\n    //     if ((layer instanceof L.Polyline) || (layer instanceof L.Marker)) {\n    //         this.map.removeLayer(layer);\n    //     }\n    // })\n    let markerGroup = (L as any).markerClusterGroup({\n        maxClusterRadius: 30,\n        iconCreateFunction: function (cluster) {\n            let childCount = cluster.getChildCount();\n            let markers = cluster.getAllChildMarkers();\n            let className = 'marker-cluster marker-cluster-';\n            if (childCount < 10) {\n                className += 'small';\n            } else if (childCount < 100) {\n                className += 'medium';\n            } else {\n                className += 'large';\n            }\n            let colorOccurrences = {};\n            let numberOfColoredMarkers = 0;\n            markers.map(marker => {\n                if (marker.options.icon.clusterColor) {\n                    numberOfColoredMarkers++;\n                    if (colorOccurrences[marker.options.icon.clusterColor]) {\n                        colorOccurrences[marker.options.icon.clusterColor] += 1;\n                    } else {\n                        colorOccurrences[marker.options.icon.clusterColor] = 1;\n                    }\n                }\n            });\n            let style = '';\n            let img = '';\n            let colors = Object.keys(colorOccurrences);\n            if (colors.length == 1) {\n                style=`background-color: ${colors[0]}`;\n            } else {\n                let stops = '';\n                let alreadyFilledPercentage = 0;\n                colors.map(color => {\n                    let n = colorOccurrences[color];\n                    let percentage = Math.round(n / numberOfColoredMarkers * 100);\n                    if (alreadyFilledPercentage > 0) {\n                        stops += ', ';\n                    }\n                    alreadyFilledPercentage += percentage;\n                    stops += `${color} 0 ${alreadyFilledPercentage}%`\n                });\n\n                let gradient = new ConicGradient({\n                    stops: stops,\n                    size: 24\n                });\n                img=`<img src=\"${gradient.png}\"></img>`;\n            }\n            return new L.DivIcon({\n                html: `<div style=\"${style}\">${img}<span>${childCount}</span></div>`,\n                className: className,\n                iconSize: new L.Point(40, 40)\n            });\n        },\n    });\n\n    this.taskList = await this.route.getTasks();\n\n    let geoJSON = this.route.getPathGeoJson();\n    let pathGroup = [];\n\n    for(let i = 0; i < this.taskList.length; i++){\n        let task: Task = this.taskList[i];\n        if (!this.state.isShowingAllTasks && !this.state.visibleTasks[task.position]) {\n            continue;\n        }\n        let icon = this.taskOpenIcon;\n\n        let removeTaskFromSkippedArray = true;\n        if (this.score.getTasksSaved().indexOf(task.id) > -1) {\n            icon = this.taskSavedIcon;\n        }else if(this.score.getTasksSolved().indexOf(task.id) > -1){\n            icon = this.taskDonePerfectIcon;\n        }else if(this.score.getTasksSolvedLow().indexOf(task.id) > -1){\n            icon = this.taskDoneIcon;\n        }else  if(this.score.getTasksFailed().indexOf(task.id) > -1){\n            icon = this.taskFailedIcon;\n        }else if(this.state.skippedTaskIds.indexOf(task.id) > -1){\n          icon = this.taskSkippedIcon;\n          removeTaskFromSkippedArray = false;\n      }\n      if (removeTaskFromSkippedArray && this.state.skippedTaskIds.indexOf(task.id) > -1) {\n            // remove task from skipped array\n            this.state.skippedTaskIds.splice(this.state.skippedTaskIds.indexOf(task.id), 1);\n      }\n      if (geoJSON) {\n          let taskGeoJsons = geoJSON.data.features.filter(data => {\n              //don't match types because some are string and some are numbers for some reason\n              return data.properties.task_id == task.id;\n          });\n          console.log(\"GEO JSON\", taskGeoJsons, task);\n          if (taskGeoJsons) {\n              for (let taskGeoJson of taskGeoJsons) {\n                  // for (let coordinateArray of taskGeoJson.geometry.coordinates) {\n                  //     coordinateArray = coordinateArray.reverse();\n                  // }\n                  let GeoJsonLayer = L.geoJSON(taskGeoJson, {\n                      style: function(feature) {\n                          return {color: feature.properties.color, dashArray: \"10 10\"};\n                        }\n                  });\n                  // let polyline = new L.Polyline(taskGeoJson.geometry.coordinates, {\n                  //     color: taskGeoJson.properties.color,\n                  //     dashArray: \"10 10\"\n                  // });\n                  this.map.addLayer(GeoJsonLayer);\n                  pathGroup.push(GeoJsonLayer);\n              }\n          }\n      }\n      markerGroup.addLayer(L.marker([task.lat, task.lon], {icon: icon}).on('click', () => {\n          if (this.state.selectedTask == task) {\n              this.gototask(task.id, task.title);\n          } else {\n              // Add event of user entering trail when session active\n              if(this.sessionInfo != null){\n                  let details = JSON.stringify({});\n                  this.chatAndSessionService.addUserEvent(\"event_task_previewed\", details, task.id.toString());\n              }\n              this.state.selectedTask = task;\n              this.map.panTo( [task.lat, task.lon] );\n          }\n      }));\n    }\n    // this.map.addLayer(pathGroup);\n    this.map.addLayer(markerGroup);\n    console.log(\"MAP AFTER UPDATE\", this.map);\n    this.markerGroup = markerGroup;\n    this.pathGroup = pathGroup;\n    this.redrawingMarkers = false;\n  }\n\n  async loadMap() {\n      //const center = [50.1208566, 8.66158515]; // Frankfurt-am Main\n      let mapquestUrl = /*Helper.mapquestUrl*/ this.route.getTilesMap(this.app.activeNarrative);\n      let subDomains = this.route.getTilesServerSubdomains(this.app.activeNarrative);//Helper.subDomains;\n\n      //[[38.4298915,27.1227443],[38.4129794,27.1416646]]\n      // const corner1 = L.latLng(38.4313915, 27.1212443)\n      // const corner2 = L.latLng(38.4114794, 27.1431646)\n      // const bbox = JSON.parse(this.route.bounding_box);\n      // const corner1 = bbox[0];\n      // const corner2 = bbox[1];\n      // const bounds: L.latLngBounds = L.latLngBounds(corner1, corner2)\n\n\n      if (this.map == null) {\n          this.map = L.map('tasks-map', {\n              attributionControl: false,\n              zoom: 18,\n              trackResize: false, // if map gets resized when not visible (when keyboard shows up) it can get into undefined state\n              maxBounds: this.route.getBoundingBoxLatLng()\n          });\n\n          // TODO: Replace leaflet-mapbox-gl Bridge with native MapboxGl JS implementation\n          // (<any>L).mapboxGL({\n          //     accessToken: \"pk.eyJ1IjoiaWd1cmphbm93IiwiYSI6ImNpdmIyNnk1eTAwNzgyenBwajhnc2tub3cifQ.dhXaJJHqLj0_thsU2qTxww\",\n          //     style: mapquestUrl,\n          //     updateInterval: 0,\n          // }).addTo(this.map);\n\n          L.control.attribution({position: 'bottomleft', prefix: 'Leaflet'}).addTo(this.map);\n          this.map.fitBounds(this.route.getViewBoundingBoxLatLng());\n          // this.map.setZoom(18);\n          this.map.on('click', e => {\n              //check if details open and reset content. for now just reset content\n              // this.routeDetails = null;\n              this.state.selectedTask = null;\n          })\n          let map = this.map;\n          await tilesDb.initialize();\n          let zoomLevels = Helper.calculateZoom(this.route.getViewBoundingBoxLatLng());\n          let offlineLayer = (L.tileLayer as any).offline(mapquestUrl, tilesDb, {\n              attribution: '&copy; mapbox.com',\n              subdomains: subDomains,\n              minZoom: zoomLevels.min_zoom,\n              maxZoom: zoomLevels.max_zoom,\n              tileSize: 256,\n              crossOrigin: true,\n              detectRetina: true,\n              bounds: this.route.getBoundingBoxLatLng()\n          });\n\n          this.gpsService.getCurrentPosition()\n                .then(resp => {\n                    if (resp && resp.coords) {\n                        console.debug('found you');\n                        // let markerGroup = L.featureGroup();\n\n                        this.userMarker = L.marker([resp.coords.latitude, resp.coords.longitude], {icon: this.userPositionIcon}).on('click', () => {\n                            // alert('Marker clicked');\n                        });\n                        this.userMarker.setRotationOrigin('center center');\n                        this.userMarker.addTo(this.map);\n\n                        if (this.watchSubscription) {\n                            this.watchSubscription.unsubscribe();\n                        }\n                        this.watchSubscription = this.gpsService.watchPosition().subscribe(resp => {\n                            if (resp && resp.coords) {\n                                const lanlng = new L.LatLng(resp.coords.latitude, resp.coords.longitude);\n                                let bBox = this.map.getBounds();\n                                if(bBox.contains(lanlng)){\n                                    // User entered visible map bounding box -> Change Icon\n                                    if(!this.isUserInsideMap){\n                                        this.userMarker.setIcon(this.userPositionIcon);\n                                    }\n                                    this.userMarker.setLatLng(lanlng);\n                                    //Rotate the user marker\n                                    if(this.prevPos!=null) {\n                                        let angle = Helper.getAngle(this.prevPos, resp.coords);\n                                        this.userMarker.setRotationAngle(angle);\n                                    }\n                                    this.isUserInsideMap = true;\n                                }\n                                else{\n                                    // User left visible map bounding box -> Change icon to arrow\n                                    if(this.isUserInsideMap){\n                                        this.userMarker.setIcon(this.userPositionArrow);\n                                    }\n                                    this.updateUserLocationArrow(lanlng);\n                                    this.isUserInsideMap = false;\n                                }\n                                this.prevPos = resp.coords;\n                            }\n                        });\n\n                        // Add map listener events\n                        this.map.on('moveend', e => {\n                            if(!this.isUserInsideMap){\n                                this.updateUserLocationArrow(new L.LatLng(this.prevPos.latitude, this.prevPos.longitude))\n                            }\n                        });\n\n\n                    }\n                })\n                .catch(error => {\n                    console.error(`Location error: ${JSON.stringify(error)}`);\n                });\n\n          const tiles = this.ormService.getTileURLsAsObject(this.route);\n          const resolveOfflineURLsAsTiles = !this.route.isNarrativeEnabled();\n          let that = this;\n          offlineLayer.getTileUrl = function (coords) {\n              var url = (L.TileLayer.prototype as any).getTileUrl.call(this, coords);\n              var dbStorageKey = this._getStorageKey(url);\n\n              if (tiles[dbStorageKey]) {\n                  return Promise.resolve(that.imagesService.getOfflineURL(dbStorageKey, false, resolveOfflineURLsAsTiles));\n              }\n              return Promise.resolve(url);\n\n          };\n\n          offlineLayer.addTo(map);\n\n          this.map.fitBounds(this.route.getViewBoundingBoxLatLng());\n\n          offlineLayer.on('offline:below-min-zoom-error', function () {\n              alert('Can not save tiles below minimum zoom level.');\n          });\n\n          offlineLayer.on('offline:save-start', function (data) {\n              console.debug(data);\n              console.debug('Saving ' + data.nTilesToSave + ' tiles.');\n          });\n\n          offlineLayer.on('offline:save-end', function () {\n              alert('All the tiles were saved.');\n          });\n\n          offlineLayer.on('offline:save-error', function (err) {\n              console.error('Error when saving tiles: ' + err);\n          });\n\n          offlineLayer.on('offline:remove-start', function () {\n              console.debug('Removing tiles.');\n          });\n\n          offlineLayer.on('offline:remove-end', function () {\n              alert('All the tiles were removed.');\n          });\n\n          offlineLayer.on('offline:remove-error', function (err) {\n              console.error('Error when removing tiles: ' + err);\n          });\n\n          //centers map in the selected task\n          if(this.state.selectedTask != null){\n            this.centerSelectedTask()\n            /* todo: show only selectedTask */\n          }\n      }\n  }\n\n  /*\n  @description: Shows direction arrow pointing towards users geolocation if he isn't inside the current boundaries\n  @param userLatLng array - [lat, lng]\n   */\n  updateUserLocationArrow(userLatLng){\n       if(!userLatLng){\n           return;\n       }\n      let bBox = this.map.getBounds();\n      let alpha = (L as any).GeometryUtil.bearing(this.map.getCenter(), userLatLng);\n      let beta = (L as any).GeometryUtil.bearing(this.map.getCenter(), bBox.getNorthEast());\n      let dx2 = ((L as any).GeometryUtil.length([bBox.getNorthWest(), bBox.getNorthEast()])) / 2;\n      let dy2 = ((L as any).GeometryUtil.length([bBox.getSouthWest(), bBox.getNorthWest()])) / 2;\n      let length = 0;\n\n      // fix negative alpha values\n      if(alpha < 0){\n          alpha = alpha + 360;\n      }\n\n      // Calculate length to bounding box in direction of own position\n      if(\n          (alpha >= beta && alpha <= (180 - beta)) ||\n          (alpha >= (180 + beta) && alpha <= (360 - beta))\n      ){\n          length = Math.abs(dx2 / Math.sin(alpha * (Math.PI / 180)));\n      }\n      else{\n          length = Math.abs(dy2 / Math.cos(alpha * (Math.PI / 180)));\n      }\n      let closestPoint = (L as any).GeometryUtil.destination(this.map.getCenter(), alpha, 0.90 * length);\n      this.userMarker.setLatLng(closestPoint);\n      this.userMarker.setRotationAngle(alpha);\n  }\n\n  centerSelectedTask(){\n    this.map.panTo( [this.state.selectedTask.lat, this.state.selectedTask.lon] );\n  }\n\n  goToNextTaskById(taskId: number, skip?: boolean){\n      this.taskList.forEach(task => {\n            if(task.id == taskId){\n                this.goToNextTask(task, skip);\n                return;\n            }\n      });\n  }\n\n  goToNextTask(task: Task, skip?: boolean){\n   //  setTimeout(async () => {\n    if(skip){\n        this.state.skippedTaskIds.push(task.id);\n    }\n      console.debug(\"goToNextTask\");\n    // task.position == index + 1\n    this.state.selectedTask = this.taskList[task.position % this.taskList.length];\n    this.state.visibleTasks[this.state.selectedTask.position] = true;\n    //this.redrawMarker();\n    this.centerSelectedTask();\n    this.saveMapStateToLocalStorage();\n   // }, 200);\n  }\n\n  async selectStartPoint(){\n    /* open the damn modal again */\n    let that = this;\n    console.log('Active Narrative is: ' + this.app.activeNarrative);\n    return this.modalsService.presentTaskListModal(this.route, this.score, this.state, this.app.activeNarrative, this.navCtrl, function(selectedTask: Task){\n            console.debug(\"back in tasksMap\");\n            that.state.selectedTask = selectedTask;\n            that.state.visibleTasks = {};\n            that.state.visibleTasks[selectedTask.position] = true;\n            that.state.isShowingAllTasks = false;\n            that.centerSelectedTask();\n            that.redrawMarker();\n            if(that.sessionInfo != null){\n            let details = JSON.stringify({title: that.state.selectedTask.title});\n            that.chatAndSessionService.addUserEvent(\"event_trail_start_from_task\", details, that.state.selectedTask.id.toString());\n        }\n    });\n    /* this.showOnlyCurrentlySelectedTadk(); */\n    /*   */\n  }\n\n  showAllTasks() {\n      this.state.isShowingAllTasks = true;\n      this.redrawMarker();\n  }\n\n  displayResetTasksModal() {\n      this.modalsService.showDialog('a_route_detail_settings_resetTasks', 'a_route_detail_settings_resetTasks_msg',\n          'no', () => {},\n          'yes', async () => {\n              await this.resetTasks();\n              this.showGuidedTrailModalWithDelay(50);\n          }, this.app.activeNarrative);\n  }\n\n  resetTasks(){\n      return new Promise(resolve => {\n          this.ormService.deleteUserScore(this.score).then(async () => {\n              this.score = new Score();\n              this.state = this.navParams.data.tasksMapState = {\n                  selectedTask: null,\n                  isShowingAllTasks: true,\n                  visibleTasks: {},\n                  skippedTaskIds: [],\n                  selectedStartTask: false,\n                  showIntroModal: true,\n                  showGuidedTrailModal: true\n              };\n              if (!this.taskList) {\n                  this.taskList = await this.route.getTasks();\n              }\n              if (this.sessionInfo != null && this.sessionInfo.sessionUser.assigned_task_id != 0) {\n                  await this.forceStartFromTask(this.sessionInfo.sessionUser.assigned_task_id);\n              }\n              this.route.completed = false;\n              this.route.completedDate = null;\n              await this.saveMapStateToLocalStorage();\n              await this.ormService.saveAndFireChangedEvent(this.route);\n              await this.redrawMarker();\n              resolve();\n          });\n      });\n   }\n\n  async sessionFinished() {\n      this.modalsService.showDialog('a_private_session_quit', 'a_private_session_quit_text',\n          'no', () => {},\n          'yes', () => {\n              let modal = this.modalCtrl.create(MCMSessionFinishedModal,\n                  {\n                      session: this.sessionInfo.session,\n                      score: this.score,\n                      tasks: this.taskList,\n                      narrative: this.app.activeNarrative\n                  }, {cssClass: this.app.activeNarrative});\n              modal.present();\n              if(this.sessionInfo != null){\n                  let details = JSON.stringify({});\n                  this.chatAndSessionService.addUserEvent(\"event_session_leave\", details, \"0\");\n              }\n              this.chatAndSessionService.exitActiveSession();\n              if(this.sessionTimeSubscription){\n                  this.sessionTimeSubscription.unsubscribe();\n              }\n          },this.app.activeNarrative);\n\n      // btn = () => {\n      //     this.navCtrl.push('TasksMap', {'routeId' : this.route.id});\n      // };\n  }\n\n  async sessionKicked(){\n       let that = this;\n      let modal = this.modalCtrl.create(MCMIconModal, {\n          title: 'a_private_session_kicked',\n          message: 'a_private_session_kicked_text',\n          modalType: MCMModalType.hint,\n          type: 'text',\n          gamificationEnabled: false,\n          narrativeEnabled: this.route.isNarrativeEnabled(),\n          narrative: this.app.activeNarrative,\n          buttons: [\n              {\n                  title: 'a_g_ok',\n                  callback: function () {\n                      modal.dismiss();\n                      let finishedModal = that.modalCtrl.create(MCMSessionFinishedModal,\n                          {\n                              session: that.sessionInfo.session,\n                              score: that.score,\n                              tasks: that.taskList,\n                              narrative: this.app.activeNarrative\n                          },{\n                              showBackdrop: true,\n                              enableBackdropDismiss: false\n                          });\n                      if(that.sessionInfo != null){\n                          that.chatAndSessionService.exitActiveSession();\n                      }\n                      if(that.sessionTimeSubscription){\n                          that.sessionTimeSubscription.unsubscribe();\n                      }\n                      finishedModal.present();\n                  }\n              },\n          ]\n      }, {showBackdrop: true, enableBackdropDismiss: true, cssClass: this.app.activeNarrative});\n      modal.present();\n  }\n    task\n  async gototask(taskId: number, taskName: string) {\n       if(this.taskBlocked){\n           console.log('session in preparation.');\n           return;\n       }\n    console.debug('taskId', taskId);\n    let that = this;\n    this.navCtrl.push('TaskDetail', {taskId: taskId, headerTitle: taskName, routeId: this.routeId, goToNextTaskById: function(taskIdToSkip: number, skip?: boolean){\n            that.goToNextTaskById(taskIdToSkip, skip);\n        }}, {}, () => {\n      // necessary because of bug which does not update URL\n      this.deepLinker.navChange('forward');\n    });\n  }\n\n  async navigateToChat() {\n      console.debug('showChat');\n      if(this.sessionInfo != null){\n          let details = JSON.stringify({});\n          this.chatAndSessionService.addUserEvent(\"event_trail_chat_open\", details, \"0\");\n      }\n    this.navCtrl.push(ChatPage, {\n        val: 'chatseite',\n        headerTitle: this.sessionInfo.session.name\n    });\n\n  }\n\n    private sessionTime() {\n        if (this.sessionInfo == null) {\n            this.startInterval = false;\n            if(this.sessionTimeSubscription){\n                this.sessionTimeSubscription.unsubscribe();\n            }\n            return;\n        }\n        let session = this.sessionInfo.session;\n        let currentTimeUnix = moment().unix();\n        let startTimeInUnix = moment(session.starts_at).unix();\n        let endTimeInUnix = moment(session.ends_at).unix();\n        let countdown = startTimeInUnix - currentTimeUnix;\n        let countdownInMin = Math.floor(countdown / 60);\n        let timerInMin = Math.floor((endTimeInUnix -currentTimeUnix) / 60);\n\n        if (currentTimeUnix > (startTimeInUnix - 3600) && currentTimeUnix < endTimeInUnix) {\n            this.startInterval = true;\n            if (currentTimeUnix < startTimeInUnix && currentTimeUnix < endTimeInUnix) {\n                this.showCountdownOrTimer = true;\n                this.countdownBeforeSession = true;\n                this.countdownOrTimerForSession = countdownInMin;\n                this.taskBlocked = true;\n            }\n            if (currentTimeUnix > startTimeInUnix && currentTimeUnix < endTimeInUnix ) {\n                this.showCountdownOrTimer = true;\n                this.countdownOrTimerForSession = timerInMin;\n                this.countdownBeforeSession = false;\n                this.taskBlocked = false;\n            }\n        } else {\n            this.startInterval = false;\n            if(this.sessionTimeSubscription){\n                this.sessionTimeSubscription.unsubscribe();\n            }\n            this.showSessionEnds = true;\n            this.taskBlocked = false;\n            // Leave session\n            let modal = this.modalCtrl.create(MCMSessionFinishedModal,\n                {\n                    session: this.sessionInfo.session,\n                    score: this.score,\n                    tasks: this.taskList,\n                    narrative: this.app.activeNarrative\n                }, {cssClass: this.app.activeNarrative});\n            modal.present();\n            return;\n        }\n\n    }\n\n    showIntroModal(): Promise<any> {\n        return new Promise<any>(success => {\n            let title = 'a_alert_welcome';\n            let message = 'a_alert_welcome_msg';\n            if (this.route.isNarrativeEnabled()) {\n                title = this.route.getNarrativeString(title);\n                message = this.route.getNarrativeString(message);\n            }\n            let introModal = this.modalCtrl.create(MCMIntroModal, {\n                title: title,\n                message: message,\n                modalType: MCMModalType.hint,\n                narrative: this.app.activeNarrative,\n                routeTitle: this.route.title,\n                buttons: [\n                    {\n                        title: 'a_alert_close',\n                        callback: function () {\n                            introModal.dismiss();\n                            success();\n                        }\n                    }\n                ]\n\n            }, {cssClass: this.app.activeNarrative});\n            introModal.present();\n        });\n    }\n\n    updateIcons() {\n\n        switch (this.app.activeNarrative) {\n            case 'pirates':\n                this.userPositionIcon = L.icon({iconUrl:\"./assets/icons/pirates/mapposition.png\" , iconSize: [100, 100], iconAnchor: [50, 50], className:'marker userPosition'});       //, shadowUrl: './assets/icons/icon_mapposition-shadow.png', shadowSize: [38, 41]});\n                this.userPositionArrow = L.icon({iconUrl:\"./assets/icons/userDirection.png\" , iconSize: [36, 36], iconAnchor: [18, 18], className:'marker userArrow'});       //, shadowUrl: './assets/icons/icon_mapposition-shadow.png', shadowSize: [38, 41]});\n                this.taskOpenIcon = L.icon({iconUrl:'assets/icons/pirates/marker-task-open.png' , iconSize: [50, 50], iconAnchor: [25, 25], className:'marker'});\n                this.taskSkippedIcon = L.icon({iconUrl:'assets/icons/pirates/marker-task-skipped.png' , iconSize: [50, 50], iconAnchor: [25, 25], className:'marker'});\n                this.taskSavedIcon = L.icon({iconUrl:'assets/icons/marker-task-saved.png' , iconSize: [35, 48], iconAnchor: [17.5, 43], className:'marker'});\n                this.taskDoneIcon = L.icon({iconUrl:'assets/icons/pirates/marker-task-good.png' , iconSize: [50, 50], iconAnchor: [25, 25], className:'marker'});\n                this.taskDonePerfectIcon = L.icon({iconUrl:'assets/icons/pirates/marker-task-perfect.png' , iconSize: [50, 50], iconAnchor: [25, 25], className:'marker'});\n                this.taskFailedIcon = L.icon({iconUrl:'assets/icons/pirates/marker-task-failed.png' , iconSize: [50, 50], iconAnchor: [25, 25], className:'marker'});\n\n                this.taskOpenIcon.clusterColor = '#AA2000';\n                this.taskSkippedIcon.clusterColor = '#b2b2b2';\n                this.taskSavedIcon.clusterColor = '#6E38B9';\n                this.taskDoneIcon.clusterColor = '#FFC033';\n                this.taskDonePerfectIcon.clusterColor = '#33CC00';\n                this.taskFailedIcon.clusterColor = '#333333';\n                break;\n            default:\n                this.userPositionIcon = L.icon({iconUrl:\"./assets/icons/mapposition.png\" , iconSize: [100, 100], iconAnchor: [50, 50], className:'marker userPosition'});       //, shadowUrl: './assets/icons/icon_mapposition-shadow.png', shadowSize: [38, 41]});\n                this.userPositionArrow = L.icon({iconUrl:\"./assets/icons/userDirection.png\" , iconSize: [36, 36], iconAnchor: [18, 18], className:'marker userArrow'});\n                this.taskOpenIcon = L.icon({iconUrl:'assets/icons/marker-task-open.png' , iconSize: [35, 48], iconAnchor: [17.5, 43], className:'marker'});\n                this.taskSkippedIcon = L.icon({iconUrl:'assets/icons/marker-task-skipped.png' , iconSize: [35, 48], iconAnchor: [17.5, 43], className:'marker'});\n                this.taskSavedIcon = L.icon({iconUrl:'assets/icons/marker-task-saved.png' , iconSize: [35, 48], iconAnchor: [17.5, 43], className:'marker'});\n                this.taskDoneIcon = L.icon({iconUrl:'assets/icons/marker-task-good.png' , iconSize: [35, 48], iconAnchor: [17.5, 43], className:'marker'});\n                this.taskDonePerfectIcon = L.icon({iconUrl:'assets/icons/marker-task-perfect.png' , iconSize: [35, 48], iconAnchor: [17.5, 43], className:'marker'});\n                this.taskFailedIcon = L.icon({iconUrl:'assets/icons/marker-task-failed.png' , iconSize: [35, 48], iconAnchor: [17.5, 43], className:'marker'});\n                this.taskOpenIcon.clusterColor = '#036D99';\n                this.taskSkippedIcon.clusterColor = '#B2B2B2';\n                this.taskSavedIcon.clusterColor = '#6E38B9';\n                this.taskDoneIcon.clusterColor = '#F3B100';\n                this.taskDonePerfectIcon.clusterColor = '#4CAF50';\n                this.taskFailedIcon.clusterColor = '#E62B25';\n                break;\n        }\n    }\n\n\n}\n\nexport interface TaskMapState {\n    selectedTask: Task;\n    isShowingAllTasks: boolean;\n    visibleTasks: any;\n    skippedTaskIds: number[];\n    selectedStartTask: boolean;\n    showIntroModal: boolean;\n    showGuidedTrailModal: boolean;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/home/tabs/TasksMap/TasksMap.ts","/**\n * CSS conic-gradient() polyfill\n * By Lea Verou — http://lea.verou.me\n * MIT license\n */\n\n(function(){\n\nvar π = Math.PI;\nvar τ = 2 * π;\nvar ε = .00001;\nvar deg = π/180;\n\nvar dummy = document.createElement(\"div\");\ndocument.head.appendChild(dummy);\n\nvar _ = self.ConicGradient = function(o) {\n\tvar me = this;\n\t_.all.push(this);\n\n\to = o || {};\n\n\tthis.canvas = document.createElement(\"canvas\");\n\tthis.context = this.canvas.getContext(\"2d\");\n\n\tthis.repeating = !!o.repeating;\n\n\tthis.size = o.size || Math.max(innerWidth, innerHeight);\n\n\tthis.canvas.width = this.canvas.height = this.size;\n\n\tvar stops = o.stops;\n\n\tthis.stops = (stops || \"\").split(/\\s*,(?![^(]*\\))\\s*/); // commas that are not followed by a ) without a ( first\n\n\tthis.from = 0;\n\n\tfor (var i=0; i<this.stops.length; i++) {\n\t\tif (this.stops[i]) {\n\t\t\tvar stop = this.stops[i] = new _.ColorStop(this, this.stops[i]);\n\n\t\t\tif (stop.next) {\n\t\t\t\tthis.stops.splice(i+1, 0, stop.next);\n\t\t\t\ti++;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tthis.stops.splice(i, 1);\n\t\t\ti--;\n\t\t}\n\t}\n\n\tif (this.stops[0].color.indexOf('from') == 0) {\n\t\tthis.from = this.stops[0].pos*360;\n\t\tthis.stops.shift();\n\t}\n\t// Normalize stops\n\n\t// Add dummy first stop or set first stop’s position to 0 if it doesn’t have one\n\tif (this.stops[0].pos === undefined) {\n\t\t\tthis.stops[0].pos = 0;\n\t\t}\n\telse if (this.stops[0].pos > 0) {\n\t\tvar first = this.stops[0].clone();\n\t\tfirst.pos = 0;\n\t\tthis.stops.unshift(first);\n\t}\n\n\t// Add dummy last stop or set first stop’s position to 100% if it doesn’t have one\n\tif (this.stops[this.stops.length - 1].pos === undefined) {\n\t\tthis.stops[this.stops.length - 1].pos = 1;\n\t}\n\telse if (!this.repeating && this.stops[this.stops.length - 1].pos < 1) {\n\t\tvar last = this.stops[this.stops.length - 1].clone();\n\t\tlast.pos = 1;\n\t\tthis.stops.push(last);\n\t}\n\n\tthis.stops.forEach(function(stop, i){\n\t\tif (stop.pos === undefined) {\n\t\t\t// Evenly space color stops with no position\n\t\t\tfor (var j=i+1; this[j]; j++) {\n\t\t\t\tif (this[j].pos !== undefined) {\n\t\t\t\t\tstop.pos = this[i-1].pos + (this[j].pos - this[i-1].pos)/(j-i+1);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if (i > 0) {\n\t\t\t// Normalize color stops whose position is smaller than the position of the stop before them\n\t\t\tstop.pos = Math.max(stop.pos, this[i-1].pos);\n\t\t}\n\t}, this.stops);\n\n\tif (this.repeating) {\n\t\t// Repeat color stops until >= 1\n\t\tvar stops = this.stops.slice();\n\t\tvar lastStop = stops[stops.length-1];\n\t\tvar difference = lastStop.pos - stops[0].pos;\n\n\t\tfor (var i=0; this.stops[this.stops.length-1].pos < 1 && i<10000; i++) {\n\t\t\tfor (var j=0; j<stops.length; j++) {\n\t\t\t\tvar s = stops[j].clone();\n\t\t\t\ts.pos += (i+1)*difference;\n\n\t\t\t\tthis.stops.push(s);\n\t\t\t}\n\t\t}\n\t}\n\n\tthis.paint();\n};\n\n_.all = [];\n\n_.prototype = {\n\ttoString: function() {\n\t\treturn \"url('\" + this.dataURL + \"')\";\n\t},\n\n\tget dataURL() {\n\t\t// IE/Edge only render data-URI based background-image when the image data\n\t\t// is escaped.\n\t\t// Ref: https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/7157459/#comment-3\n\t\treturn \"data:image/svg+xml,\" + encodeURIComponent(this.svg);\n\t},\n\n\tget blobURL() {\n\t\t// Warning: Flicker when updating due to slow blob: URL resolution :(\n\t\t// TODO cache this and only update it when color stops change\n\t\treturn URL.createObjectURL(new Blob([this.svg], {type: \"image/svg+xml\"}));\n\t},\n\n\tget svg() {\n\t\treturn '<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" preserveAspectRatio=\"none\">' +\n\t\t\t'<svg viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid slice\">' +\n\t\t\t'<image width=\"100\" height=\"100%\" xlink:href=\"' + this.png + '\" /></svg></svg>';\n\t},\n\n\tget png() {\n\t\treturn this.canvas.toDataURL();\n\t},\n\n\tget r() {\n\t\treturn Math.sqrt(2) * this.size / 2;\n\t},\n\n\t// Paint the conical gradient on the canvas\n\t// Algorithm inspired from http://jsdo.it/akm2/yr9B\n\tpaint: function() {\n\t\tvar c = this.context;\n\n\t\tvar radius = this.r;\n\t\tvar x = this.size / 2;\n\n\t\tvar stopIndex = 0; // The index of the current color\n\t\tvar stop = this.stops[stopIndex], prevStop;\n\n\t\tvar diff, t;\n\n\t\t// Transform coordinate system so that angles start from the top left, like in CSS\n\t\tc.translate(this.size/2, this.size/2);\n\t\tc.rotate(-90*deg);\n\t\tc.rotate(this.from*deg);\n\t\tc.translate(-this.size/2, -this.size/2);\n\n\t\tfor (var i = 0; i < 360;) {\n\t\t\tif (i/360 + ε >= stop.pos) {\n\t\t\t\t// Switch color stop\n\t\t\t\tdo {\n\t\t\t\t\tprevStop = stop;\n\n\t\t\t\t\tstopIndex++;\n\t\t\t\t\tstop = this.stops[stopIndex];\n\t\t\t\t} while(stop && stop != prevStop && stop.pos === prevStop.pos);\n\n\t\t\t\tif (!stop) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tvar sameColor = prevStop.color + \"\" === stop.color + \"\" && prevStop != stop;\n\n\t\t\t\tdiff = prevStop.color.map(function(c, i){\n\t\t\t\t\treturn stop.color[i] - c;\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tt = (i/360 - prevStop.pos) / (stop.pos - prevStop.pos);\n\n\t\t\tvar interpolated = sameColor? stop.color : diff.map(function(d,i){\n\t\t\t\tvar ret = d * t + prevStop.color[i];\n\n\t\t\t\treturn i < 3? ret & 255 : ret;\n\t\t\t});\n\n\t\t\t// Draw a series of arcs, 1deg each\n\t\t\tc.fillStyle = 'rgba(' + interpolated.join(\",\") + ')';\n\t\t\tc.beginPath();\n\t\t\tc.moveTo(x, x);\n\n\t\t\tif (sameColor) {\n\t\t\t\tvar θ = 360 * (stop.pos - prevStop.pos);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tvar θ = .5;\n\t\t\t}\n\n\t\t\tvar beginArg = i*deg;\n\t\t\tbeginArg = Math.min(360*deg, beginArg);\n\n\t\t\t// .02: To prevent empty blank line and corresponding moire\n\t\t\t// only non-alpha colors are cared now\n\t\t\tvar endArg = beginArg + θ*deg;\n\t\t\tendArg = Math.min(360*deg, endArg + .02);\n\n\t\t\tc.arc(x, x, radius, beginArg, endArg);\n\n\t\t\tc.closePath();\n\t\t\tc.fill();\n\n\t\t\ti += θ;\n\t\t}\n\t}\n};\n\n_.ColorStop = function(gradient, stop) {\n\tthis.gradient = gradient;\n\n\tif (stop) {\n\t\tvar parts = stop.match(/^(.+?)(?:\\s+([\\d.]+)(%|deg|turn|grad|rad)?)?(?:\\s+([\\d.]+)(%|deg|turn|grad|rad)?)?\\s*$/);\n\n\t\tthis.color = _.ColorStop.colorToRGBA(parts[1]);\n\n\t\tif (parts[2]) {\n\t\t\tvar unit = parts[3];\n\n\t\t\tif (unit == \"%\" || parts[2] === \"0\" && !unit) {\n\t\t\t\tthis.pos = parts[2]/100;\n\t\t\t}\n\t\t\telse if (unit == \"turn\") {\n\t\t\t\tthis.pos  = +parts[2];\n\t\t\t}\n\t\t\telse if (unit == \"deg\") {\n\t\t\t\tthis.pos  = parts[2] / 360;\n\t\t\t}\n\t\t\telse if (unit == \"grad\") {\n\t\t\t\tthis.pos  = parts[2] / 400;\n\t\t\t}\n\t\t\telse if (unit == \"rad\") {\n\t\t\t\tthis.pos  = parts[2] / τ;\n\t\t\t}\n\t\t}\n\n\t\tif (parts[4]) {\n\t\t\tthis.next = new _.ColorStop(gradient, parts[1] + \" \" + parts[4] + parts[5]);\n\t\t}\n\t}\n}\n\n_.ColorStop.prototype = {\n\tclone: function() {\n\t\tvar ret = new _.ColorStop(this.gradient);\n\t\tret.color = this.color;\n\t\tret.pos = this.pos;\n\n\t\treturn ret;\n\t},\n\n\ttoString: function() {\n\t\treturn \"rgba(\" + this.color.join(\", \") + \") \" + this.pos * 100 + \"%\";\n\t}\n};\n\n_.ColorStop.colorToRGBA = function(color) {\n\tif (!Array.isArray(color) && color.indexOf(\"from\") == -1) {\n\t\tdummy.style.color = color;\n\n\t\tvar rgba = getComputedStyle(dummy).color.match(/rgba?\\(([\\d.]+), ([\\d.]+), ([\\d.]+)(?:, ([\\d.]+))?\\)/);\n\n\t\tif (rgba) {\n\t\t\trgba.shift();\n\t\t\trgba = rgba.map(function(a) { return +a });\n\t\t\trgba[3] = isNaN(rgba[3])? 1 : rgba[3];\n\t\t}\n\n\t\treturn rgba || [0,0,0,0];\n\t}\n\n\treturn color;\n};\n\n})();\n\nif (self.StyleFix) {\n\t// Test if conic gradients are supported first:\n\t(function(){\n\t\tvar dummy = document.createElement(\"p\");\n\t\tdummy.style.backgroundImage = \"conic-gradient(white, black)\";\n\t\tdummy.style.backgroundImage = PrefixFree.prefix + \"conic-gradient(white, black)\";\n\n\t\tif (!dummy.style.backgroundImage) {\n\t\t\t// Not supported, use polyfill\n\t\t\tStyleFix.register(function(css, raw) {\n\t\t\t\tif (css.indexOf(\"conic-gradient\") > -1) {\n\t\t\t\t\tcss = css.replace(/(?:repeating-)?conic-gradient\\(\\s*((?:\\([^()]+\\)|[^;()}])+?)\\)/g, function(gradient, stops) {\n\t\t\t\t\t\treturn new ConicGradient({\n\t\t\t\t\t\t\tstops: stops,\n\t\t\t\t\t\t\trepeating: gradient.indexOf(\"repeating-\") > -1\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\treturn css;\n\t\t\t});\n\t\t}\n\t})();\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/conic-gradient/conic-gradient.js\n// module id = 1165\n// module chunks = 1"],"sourceRoot":""}