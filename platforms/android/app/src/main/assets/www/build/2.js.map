{"version":3,"sources":["../../src/pages/task-group-detail/task-group-detail.module.ts","../../node_modules/@ionic-native/safari-view-controller/index.js","../../src/pages/task-group-detail/task-group-detail.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAyC;AACO;AACM;AACI;AACY;AACf;AACqB;AAe5E;IAAA;IAAmC,CAAC;IAAvB,oBAAoB;QAXhC,+DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,+EAAmB;aACpB;YACD,OAAO,EAAE;gBACP,sEAAe,CAAC,QAAQ,CAAC,+EAAmB,CAAC;gBAC7C,4EAAe;gBACf,uFAAgB;aACjB;YACD,SAAS,EAAE,CAAC,+EAAW,EAAE,kGAAoB,CAAC;SAC/C,CAAC;OACW,oBAAoB,CAAG;IAAD,2BAAC;CAAA;AAAH;;;;;;;;;ACrBjC;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AAC2C;AAC6B;AAC3B;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,uBAAuB;AAClC;AACA,oEAAoE;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA,mBAAmB;AACnB;AACA,iBAAiB,QAAQ;AACzB;AACA;AACA,uBAAuB,4BAA4B;AACnD,iBAAiB;AACjB;AACA;AACA;AACA,yBAAyB,4BAA4B;AACrD,mBAAmB;AACnB;AACA;AACA;AACA,yBAAyB,4BAA4B;AACrD,mBAAmB;AACnB;AACA,wBAAwB,QAAQ;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,QAAQ;AACzB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA,mBAAmB;AACnB;AACA,iBAAiB,QAAQ;AACzB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA,mBAAmB;AACnB;AACA,iBAAiB,QAAQ;AACzB;AACA;AACA,kBAAkB;AAClB,iBAAiB;AACjB;AACA;AACA;AACA,oBAAoB;AACpB,mBAAmB;AACnB;AACA;AACA;AACA,oBAAoB;AACpB,mBAAmB;AACnB;AACA,oBAAoB,QAAQ;AAC5B;AACA,SAAS,OAAO,yDAAU,EAAE;AAC5B;AACA;AACA,QAAQ,2EAAO;AACf;AACA;AACA;AACA;AACA;AACA,QAAQ,2EAAO;AACf;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,wCAAwC,2DAAU;AAClD;AACA;AACA,QAAQ,2EAAO;AACf;AACA;AACA;AACA;AACA;AACA,QAAQ,2EAAO;AACf;AACA;AACA;AACA;AACA;AACA,QAAQ,2EAAO;AACf;AACA;AACA;AACA;AACA;AACA,QAAQ,2EAAO;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,uBAAuB;AACtC;AACA,wEAAwE;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,0EAAM;AACd;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC,CAAC,6EAAiB;AACa;AAChC,iC;;;;;;;;;;;;;;;;;;;;AC3PmD;AACe;AAOlE;IAGI,6BACW,OAAsB,EACtB,SAAoB;QADpB,YAAO,GAAP,OAAO,CAAe;QACtB,cAAS,GAAT,SAAS,CAAW;IAC5B,CAAC;IALgB;QAAnB,gEAAS,CAAC,8DAAO,CAAC;kCAAU,8DAAO;wDAAC;IAD5B,mBAAmB;QAJ/B,gEAAS,CAAC;YACP,QAAQ,EAAE,wBAAwB;WACG;SACxC,CAAC;8EAKmC;YACX,SAAS;OALtB,mBAAmB,CAO/B;IAAD,CAAC;AAAA;SAPY,mBAAmB,iB","file":"2.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { TaskGroupDetailPage } from './task-group-detail';\nimport { ComponentsModule } from '../../components/components.module';\nimport {PhotoViewer} from \"@ionic-native/photo-viewer\";\nimport { SafariViewController } from '@ionic-native/safari-view-controller';\n\n\n\n@NgModule({\n  declarations: [\n    TaskGroupDetailPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(TaskGroupDetailPage),\n    TranslateModule,\n    ComponentsModule,\n  ],\n  providers: [PhotoViewer, SafariViewController]\n})\nexport class TaskDetailPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/task-group-detail/task-group-detail.module.ts","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nimport { Injectable } from '@angular/core';\nimport { Cordova, IonicNativePlugin, Plugin } from '@ionic-native/core';\nimport { Observable } from 'rxjs/Observable';\n/**\n * @name Safari View Controller\n * @description\n * For displaying read-only web content.\n *\n * Requires Cordova plugin: `cordova-plugin-safariviewcontroller`. For more info, please see the [Safari View Controller plugin docs](https://github.com/EddyVerbruggen/cordova-plugin-safariviewcontroller).\n *\n * @usage\n * ```typescript\n * import { SafariViewController } from '@ionic-native/safari-view-controller';\n *\n * constructor(private safariViewController: SafariViewController) { }\n *\n * ...\n *\n * this.safariViewController.isAvailable()\n *   .then((available: boolean) => {\n *       if (available) {\n *\n *         this.safariViewController.show({\n *           url: 'http://ionic.io',\n *           hidden: false,\n *           animated: false,\n *           transition: 'curl',\n *           enterReaderModeIfAvailable: true,\n *           tintColor: '#ff0000'\n *         })\n *         .subscribe((result: any) => {\n *             if(result.event === 'opened') console.log('Opened');\n *             else if(result.event === 'loaded') console.log('Loaded');\n *             else if(result.event === 'closed') console.log('Closed');\n *           },\n *           (error: any) => console.error(error)\n *         );\n *\n *       } else {\n *         // use fallback browser, example InAppBrowser\n *       }\n *     }\n *   );\n * ```\n * @interfaces\n * SafariViewControllerOptions\n */\nvar SafariViewController = (function (_super) {\n    __extends(SafariViewController, _super);\n    function SafariViewController() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Checks if SafariViewController is available\n     * @returns {Promise<boolean>}\n     */\n    /**\n       * Checks if SafariViewController is available\n       * @returns {Promise<boolean>}\n       */\n    SafariViewController.prototype.isAvailable = /**\n       * Checks if SafariViewController is available\n       * @returns {Promise<boolean>}\n       */\n    function () { return; };\n    /**\n     * Shows Safari View Controller\n     * @param options {SafariViewControllerOptions} optional\n     * @returns {Observable<any>}\n     */\n    /**\n       * Shows Safari View Controller\n       * @param options {SafariViewControllerOptions} optional\n       * @returns {Observable<any>}\n       */\n    SafariViewController.prototype.show = /**\n       * Shows Safari View Controller\n       * @param options {SafariViewControllerOptions} optional\n       * @returns {Observable<any>}\n       */\n    function (options) { return; };\n    /**\n     * Hides Safari View Controller\n     */\n    /**\n       * Hides Safari View Controller\n       */\n    SafariViewController.prototype.hide = /**\n       * Hides Safari View Controller\n       */\n    function () { return; };\n    /**\n     * Tries to connect to the  Chrome's custom tabs service. you must call this method before calling any of the other methods listed below.\n     * @returns {Promise<any>}\n     */\n    /**\n       * Tries to connect to the  Chrome's custom tabs service. you must call this method before calling any of the other methods listed below.\n       * @returns {Promise<any>}\n       */\n    SafariViewController.prototype.connectToService = /**\n       * Tries to connect to the  Chrome's custom tabs service. you must call this method before calling any of the other methods listed below.\n       * @returns {Promise<any>}\n       */\n    function () { return; };\n    /**\n     * Call this method whenever there's a chance the user will open an external url.\n     * @returns {Promise<any>}\n     */\n    /**\n       * Call this method whenever there's a chance the user will open an external url.\n       * @returns {Promise<any>}\n       */\n    SafariViewController.prototype.warmUp = /**\n       * Call this method whenever there's a chance the user will open an external url.\n       * @returns {Promise<any>}\n       */\n    function () { return; };\n    /**\n     * For even better performance optimization, call this methods if there's more than a 50% chance the user will open a certain URL.\n     * @param url{string}\n     * @returns {Promise<any>}\n     */\n    /**\n       * For even better performance optimization, call this methods if there's more than a 50% chance the user will open a certain URL.\n       * @param url{string}\n       * @returns {Promise<any>}\n       */\n    SafariViewController.prototype.mayLaunchUrl = /**\n       * For even better performance optimization, call this methods if there's more than a 50% chance the user will open a certain URL.\n       * @param url{string}\n       * @returns {Promise<any>}\n       */\n    function (url) { return; };\n    SafariViewController.decorators = [\n        { type: Injectable },\n    ];\n    __decorate([\n        Cordova(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Promise)\n    ], SafariViewController.prototype, \"isAvailable\", null);\n    __decorate([\n        Cordova({\n            successIndex: 1,\n            errorIndex: 2,\n            observable: true\n        }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object]),\n        __metadata(\"design:returntype\", Observable)\n    ], SafariViewController.prototype, \"show\", null);\n    __decorate([\n        Cordova(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Promise)\n    ], SafariViewController.prototype, \"hide\", null);\n    __decorate([\n        Cordova(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Promise)\n    ], SafariViewController.prototype, \"connectToService\", null);\n    __decorate([\n        Cordova(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Promise)\n    ], SafariViewController.prototype, \"warmUp\", null);\n    __decorate([\n        Cordova(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String]),\n        __metadata(\"design:returntype\", Promise)\n    ], SafariViewController.prototype, \"mayLaunchUrl\", null);\n    /**\n     * @name Safari View Controller\n     * @description\n     * For displaying read-only web content.\n     *\n     * Requires Cordova plugin: `cordova-plugin-safariviewcontroller`. For more info, please see the [Safari View Controller plugin docs](https://github.com/EddyVerbruggen/cordova-plugin-safariviewcontroller).\n     *\n     * @usage\n     * ```typescript\n     * import { SafariViewController } from '@ionic-native/safari-view-controller';\n     *\n     * constructor(private safariViewController: SafariViewController) { }\n     *\n     * ...\n     *\n     * this.safariViewController.isAvailable()\n     *   .then((available: boolean) => {\n     *       if (available) {\n     *\n     *         this.safariViewController.show({\n     *           url: 'http://ionic.io',\n     *           hidden: false,\n     *           animated: false,\n     *           transition: 'curl',\n     *           enterReaderModeIfAvailable: true,\n     *           tintColor: '#ff0000'\n     *         })\n     *         .subscribe((result: any) => {\n     *             if(result.event === 'opened') console.log('Opened');\n     *             else if(result.event === 'loaded') console.log('Loaded');\n     *             else if(result.event === 'closed') console.log('Closed');\n     *           },\n     *           (error: any) => console.error(error)\n     *         );\n     *\n     *       } else {\n     *         // use fallback browser, example InAppBrowser\n     *       }\n     *     }\n     *   );\n     * ```\n     * @interfaces\n     * SafariViewControllerOptions\n     */\n    SafariViewController = __decorate([\n        Plugin({\n            pluginName: 'SafariViewController',\n            plugin: 'cordova-plugin-safariviewcontroller',\n            pluginRef: 'SafariViewController',\n            repo: 'https://github.com/EddyVerbruggen/cordova-plugin-safariviewcontroller',\n            platforms: ['Android', 'iOS']\n        })\n    ], SafariViewController);\n    return SafariViewController;\n}(IonicNativePlugin));\nexport { SafariViewController };\n//# sourceMappingURL=index.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@ionic-native/safari-view-controller/index.js\n// module id = 1161\n// module chunks = 0 2","import {Component, ViewChild} from '@angular/core';\nimport {Content, IonicPage, NavController, NavParams} from 'ionic-angular';\n\n@IonicPage({\n    segment: ':routeId/TasksGroupDetail/:taskId'\n})\n@Component({\n    selector: 'page-task-group-detail',\n    templateUrl: 'task-group-detail.html',\n})\nexport class TaskGroupDetailPage {\n    @ViewChild(Content) content: Content;\n\n    constructor(\n        public navCtrl: NavController,\n        public navParams: NavParams,\n    ) {}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/task-group-detail/task-group-detail.ts"],"sourceRoot":""}