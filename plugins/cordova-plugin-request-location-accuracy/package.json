{
  "_args": [
    [
      {
        "raw": "cordova-plugin-request-location-accuracy",
        "scope": null,
        "escapedName": "cordova-plugin-request-location-accuracy",
        "name": "cordova-plugin-request-location-accuracy",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "C:\\Work\\MCM"
    ]
  ],
  "_from": "cordova-plugin-request-location-accuracy@latest",
  "_id": "cordova-plugin-request-location-accuracy@2.2.2",
  "_inCache": true,
  "_location": "/cordova-plugin-request-location-accuracy",
  "_nodeVersion": "7.10.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/cordova-plugin-request-location-accuracy-2.2.2.tgz_1504020107327_0.3603582384530455"
  },
  "_npmUser": {
    "name": "davealden",
    "email": "dave@workingedge.co.uk"
  },
  "_npmVersion": "4.2.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "cordova-plugin-request-location-accuracy",
    "scope": null,
    "escapedName": "cordova-plugin-request-location-accuracy",
    "name": "cordova-plugin-request-location-accuracy",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/cordova-plugin-request-location-accuracy/-/cordova-plugin-request-location-accuracy-2.2.2.tgz",
  "_shasum": "0c6894348bdd4fa968d5d4c03cc0c815578be7c2",
  "_shrinkwrap": null,
  "_spec": "cordova-plugin-request-location-accuracy",
  "_where": "C:\\Work\\MCM",
  "author": {
    "name": "Dave Alden"
  },
  "bugs": {
    "url": "https://github.com/dpa99c/cordova-plugin-request-location-accuracy/issues"
  },
  "cordova": {
    "id": "cordova-plugin-request-location-accuracy",
    "platforms": [
      "android",
      "ios"
    ]
  },
  "cordova_name": "Request Location Accuracy",
  "dependencies": {},
  "description": "Cordova/Phonegap plugin for Android to request Location Accuracy mode via Google Play Services.",
  "devDependencies": {},
  "directories": {},
  "dist": {
    "shasum": "0c6894348bdd4fa968d5d4c03cc0c815578be7c2",
    "tarball": "https://registry.npmjs.org/cordova-plugin-request-location-accuracy/-/cordova-plugin-request-location-accuracy-2.2.2.tgz"
  },
  "gitHead": "915b178faebd874f8a1a8b37c14590f7efb5b846",
  "homepage": "https://github.com/dpa99c/cordova-plugin-request-location-accuracy#readme",
  "issue": "https://github.com/dpa99c/cordova-plugin-request-location-accuracy/issues",
  "keywords": [
    "ecosystem:cordova",
    "cordova",
    "cordova-android",
    "cordova-ios",
    "phonegap",
    "diagnostic",
    "location",
    "accuracy",
    "high accuracy",
    "fine accuracy",
    "gps",
    "settings"
  ],
  "license": "MIT",
  "maintainers": [
    {
      "name": "davealden",
      "email": "dave@workingedge.co.uk"
    }
  ],
  "name": "cordova-plugin-request-location-accuracy",
  "optionalDependencies": {},
  "readme": "Cordova Request Location Accuracy Plugin [![Latest Stable Version](https://img.shields.io/npm/v/cordova-plugin-request-location-accuracy.svg)](https://www.npmjs.com/package/cordova-plugin-request-location-accuracy) [![Total Downloads](https://img.shields.io/npm/dt/cordova-plugin-request-location-accuracy.svg)](https://npm-stat.com/charts.html?package=cordova-plugin-request-location-accuracy)\n========================================\n<!-- START table-of-contents -->\n**Table of Contents**\n\n- [Overview](#overview)\n  - [Android overview](#android-overview)\n    - [Pre-requisites](#pre-requisites)\n  - [iOS overview](#ios-overview)\n    - [iOS \"Cancel\" button caveat](#ios-cancel-button-caveat)\n- [Example project](#example-project)\n- [Installation](#installation)\n  - [Using the Cordova/Phonegap CLI](#using-the-cordovaphonegap-cli)\n  - [PhoneGap Build](#phonegap-build)\n- [Usage](#usage)\n  - [Android & iOS](#android-&-ios)\n    - [request()](#request)\n      - [Android](#android)\n      - [iOS](#ios)\n      - [Combined Android & iOS example](#combined-android-&-ios-example)\n    - [isRequesting()](#isrequesting)\n    - [canRequest()](#canrequest)\n  - [Android-only](#android-only)\n    - [Request constants](#request-constants)\n    - [Callback constants](#callback-constants)\n      - [Success constants](#success-constants)\n      - [Error constants](#error-constants)\n- [License](#license)\n\n<!-- END table-of-contents -->\n\n# Overview\n\nThis Cordova/Phonegap plugin for Android and iOS to request enabling/changing of Location Services by triggering a native dialog from within the app, avoiding the need for the user to leave your app to change location settings manually.\n\n<!-- DONATE -->\n[![donate](https://www.paypalobjects.com/en_US/i/btn/btn_donateCC_LG_global.gif)](https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=ZRD3W47HQ3EMJ)\n\nI dedicate a considerable amount of my free time to developing and maintaining this Cordova plugin, along with my other Open Source software.\nTo help ensure this plugin is kept updated, new features are added and bugfixes are implemented quickly, please donate a couple of dollars (or a little more if you can stretch) as this will help me to afford to dedicate time to its maintenance. Please consider donating if you're using this plugin in an app that makes you money, if you're being paid to make the app, if you're asking for new features or priority bug fixes.\n<!-- END DONATE -->\n\n## Android overview\n\n[![Example Android app screencapture](https://j.gifs.com/KRL8Mb.gif)](https://www.youtube.com/watch?v=pbNdnMDRstg)\n\nOn Android, this plugin allows an app to request a specific accuracy for Location Services.\nIf the requested accuracy is higher than the current Location Mode setting of the device, the user is asked to confirm the change with a Yes/No dialog.\n\nFor example, if a navigation app that requires GPS, the plugin is able to switch on Location Services or change the Location Mode from low accuracy to high accuracy,\nwithout the user needing to leave the app to do this manually on the Location Settings page.\n\nIt uses the Google Play Services Location API (v7+) to change the device location settings. In case the user doesn't have an up-to-date version of Google Play Services or there's some other problem accessing it, you may want to use another of my plugins, [cordova.plugins.diagnostic](https://github.com/dpa99c/cordova-diagnostic-plugin) as a fallback. This is able to switch the user directly to the Location Settings page where they can manually change the Location Mode.\n\n**So why is this plugin not just part of [cordova.plugins.diagnostic](https://github.com/dpa99c/cordova-diagnostic-plugin)?**\n\nBecause you may not wish to use the location features of the diagnostic plugin and the dependency on the Google Play Services library increases the size of the app APK by about 2Mb.\n\n### Pre-requisites\n\n**IMPORTANT:** This plugin depends on the Google Play Services library, so you must install the \"Google Repository\" package under the \"Extras\" section in Android SDK Manager.\nOtherwise the build will fail.\n\n![SDK Manager](http://i.stack.imgur.com/jPqsW.png)\n\n## iOS overview\n\n[![Example iOS app screencapture](https://j.gifs.com/1woNPj.gif)](https://www.youtube.com/watch?v=PBZKH7u5RlQ)\n\nIf Location Services is turned OFF on an iOS device, no app on the device can access the location.\n\nIt is not programmatically possible to switch Location Services ON or to directly open the Location Services page in the Settings app.\n\nThe best that can be done by direct programmatic invocation of the Settings app is to open the app's own permissions page - the [`switchToSettings()`](https://github.com/dpa99c/cordova-diagnostic-plugin#switchtosettings) of [cordova-diagnostic-plugin](https://github.com/dpa99c/cordova-diagnostic-plugin#switchtosettings) enables you to do this. However, the user must still manually navigate from the app permissions page in the Settings app to the Location Services setting on the Privacy page.\n\nIf Location Services is turned OFF, this plugin enables an app to display a native iOS system dialog which gives user the option of directly opening the Privacy page in the Settings app which contains the switch to turn Location Services ON.\n\nIn order to show the native dialog allowing direct opening of the Privacy page, a location must be requested via the native location manager. So why can't you just use [cordova-plugin-geolocation](https://github.com/apache/cordova-plugin-geolocation) to request the location? Because when Location Services is OFF, the app reports that use of location is unauthorized, and [cordova-plugin-geolocation](https://github.com/apache/cordova-plugin-geolocation) will not request a location if it determines location is unauthorized: see [this Cordova issue](https://issues.apache.org/jira/browse/CB-10478).\n\n### iOS \"Cancel\" button caveat\n\nAs highlighted by [issue #16](https://github.com/dpa99c/cordova-plugin-request-location-accuracy/issues/16), there is one scenario in which the iOS implementation of this plugin fails: if, upon successfully showing the native dialog, the user presses \"Cancel\" instead of \"Settings\", any subsequent requests via this plugin **will not** show the dialog again. Ever! This is because iOS assumes that if the user pressed \"Cancel\", they don't want your app to use their location, so iOS prevents you from asking them again to switch on Location Services.\n\nThere's no way to tell which button the user pressed in the native dialog or whether \"Cancel\" was pressed and the dialog is not being shown. Consequently, if the user has pressed \"Cancel\" in the native dialog, any subsequent calls to the plugin will still result in the success callback being invoked, since (as far as the plugin is concerned), it successfully requested a location from the native location manager.\n\nThe best approach to workaround this is to recheck the state of Location Services using [canRequest()](#canrequest) on each [resume event](https://cordova.apache.org/docs/en/latest/cordova/events/events.html#resume). If the user has pressed \"Settings\", your app will be put in the background while the Settings app is brought into the foreground, so when the user returns to your app, it will resume from the background.\n\n# Example project\n\nAn example project illustrating use of this plugin can be found here: [https://github.com/dpa99c/cordova-plugin-request-location-accuracy-example](https://github.com/dpa99c/cordova-plugin-request-location-accuracy-example)\n\n# Installation\n\n## Using the Cordova/Phonegap CLI\n\n    $ cordova plugin add cordova-plugin-request-location-accuracy\n    $ phonegap plugin add cordova-plugin-request-location-accuracy\n\n## PhoneGap Build\nAdd the following xml to your config.xml to use the latest version of this plugin from [npm](https://www.npmjs.com/package/cordova-plugin-request-location-accuracy):\n\n    <plugin name=\"cordova-plugin-request-location-accuracy\" source=\"npm\" />\n\n\n\n# Usage\n\nThe plugin is exposed via the `cordova.plugins.locationAccuracy` object.\n\n## Android & iOS\n\n### request()\n\nThis is the main plugin method.\n\n#### Android\n\nRequests a specific accuracy for Location Services.\n\n    cordova.plugins.locationAccuracy.request(successCallback, errorCallback, accuracy)\n\nParameters:\n\n- {Function} successCallback - callback to be invoked on successful resolution of the requested accuracy.\nA single object argument will be passed which has two keys:\n\"code\" in an integer corresponding to a [SUCCESS constant](#success-constants) and indicates the reason for success;\n\"message\" is a string containing a description of the success.\n- {Function} errorCallback - callback to be invoked on failure to resolve the requested accuracy.\nA single object argument will be passed which has two keys:\n\"code\" in an integer corresponding to an [ERROR constant](#error-constants) and indicates the reason for failure;\n\"message\" is a string containing a description of the error.\n- {Integer} accuracy - The location accuracy to request defined by an integer corresponding to a [REQUEST constant](#request-constants).\n\nExample usage:\n\n    cordova.plugins.locationAccuracy.canRequest(function(canRequest){\n        if(canRequest){\n            cordova.plugins.locationAccuracy.request(function (success){\n                console.log(\"Successfully requested accuracy: \"+success.message);\n            }, function (error){\n               console.error(\"Accuracy request failed: error code=\"+error.code+\"; error message=\"+error.message);\n               if(error.code !== cordova.plugins.locationAccuracy.ERROR_USER_DISAGREED){\n                   if(window.confirm(\"Failed to automatically set Location Mode to 'High Accuracy'. Would you like to switch to the Location Settings page and do this manually?\")){\n                       cordova.plugins.diagnostic.switchToLocationSettings();\n                   }\n               }\n            }, cordova.plugins.locationAccuracy.REQUEST_PRIORITY_HIGH_ACCURACY);\n        }\n    });\n\n#### iOS\n\nIf Location Services is OFF, invokes the native dialog to directly open the Location Services page in the Settings app.\n\n    cordova.plugins.locationAccuracy.request(successCallback, errorCallback)\n\nParameters:\n\n- {Function} successCallback - callback to be invoked on successful request to invoke the dialog.\n- {Function} errorCallback - callback to be invoked on failure to request a location and invoked the dialog.\n\nExample usage:\n\n    cordova.plugins.locationAccuracy.canRequest(function(canRequest){\n        if(canRequest){\n            cordova.plugins.locationAccuracy.request(function(){\n                console.log(\"Successfully made request to invoke native Location Services dialog\");\n            }, function(){\n                console.error(\"Failed to invoke native Location Services dialog\");\n            });\n        }\n    });\n\n#### Combined Android & iOS example\n\n    cordova.plugins.locationAccuracy.canRequest(function(canRequest){\n        if(canRequest){\n            cordova.plugins.locationAccuracy.request(function(){\n                console.log(\"Request successful\");\n            }, function (error){\n                console.error(\"Request failed\");\n                if(error){\n                    // Android only\n                    console.error(\"error code=\"+error.code+\"; error message=\"+error.message);\n                    if(error.code !== cordova.plugins.locationAccuracy.ERROR_USER_DISAGREED){\n                        if(window.confirm(\"Failed to automatically set Location Mode to 'High Accuracy'. Would you like to switch to the Location Settings page and do this manually?\")){\n                            cordova.plugins.diagnostic.switchToLocationSettings();\n                        }\n                    }\n                }\n            }, cordova.plugins.locationAccuracy.REQUEST_PRIORITY_HIGH_ACCURACY // iOS will ignore this\n            );\n        }\n    });\n\n\n\n### isRequesting()\n\nIndicates if a request is currently in progress.\n\n    cordova.plugins.locationAccuracy.isRequesting(successCallback);\n\nParameters:\n\n- {Function} successCallback - callback to pass result to.\nThis is passed a boolean argument indicating if a request is currently in progress.\n\nExample usage:\n\n     cordova.plugins.locationAccuracy.isRequesting(function(requesting){\n        console.log(\"A request \" + (requesting ? \"is\" : \"is not\") + \" currently in progress\");\n     });\n\n### canRequest()\n\nIndicates if a request is possible to invoke a request.\nOn iOS, this will return true if Location Services is currently OFF and request is not currently in progress.\nOn Android, this will return true if the app has authorization to use location.\n\n    cordova.plugins.locationAccuracy.canRequest(successCallback);\n\n\nParameters:\n\n- {Function} successCallback - callback to pass result to.\nThis is passed a boolean argument indicating if a request can be made.\n\nExample usage:\n\n    cordova.plugins.locationAccuracy.canRequest(function(canRequest){\n        console.log(\"A request \" + (canRequest ? \"can\" : \"cannot\") + \" currently be made\");\n    });\n\n## Android-only\n\n### Request constants\n\nThe location accuracy which is to be requested is defined as a set of REQUEST constants on the `cordova.plugins.locationAccuracy` object:\n\n- `cordova.plugins.locationAccuracy.REQUEST_PRIORITY_NO_POWER`: Request location mode priority \"no power\": the best accuracy possible with zero additional power consumption.\n- `cordova.plugins.locationAccuracy.REQUEST_PRIORITY_LOW_POWER`: Request location mode priority \"low power\":  \"city\" level accuracy (about 10km accuracy).\n- `cordova.plugins.locationAccuracy.REQUEST_PRIORITY_BALANCED_POWER_ACCURACY`: Request location mode priority \"balanced power\":  \"block\" level accuracy (about 100 meter accuracy).\n- `cordova.plugins.locationAccuracy.REQUEST_PRIORITY_HIGH_ACCURACY`: Request location mode priority \"high accuracy\":  the most accurate locations available. This will use GPS hardware to retrieve positions.\n\n\nSee [https://developers.google.com/android/reference/com/google/android/gms/location/LocationRequest#constants](https://developers.google.com/android/reference/com/google/android/gms/location/LocationRequest#constants)\n\n### Callback constants\n\nBoth the `successCallback()` and `errorCallback()` functions will be passed an object which contains both a descriptive message and a code indicating the result of the operation.\nThese constants are defined on the `cordova.plugins.locationAccuracy` object.\n\n#### Success constants\n\nThe `successCallback()` function will be pass an object where the \"code\" key may correspond to the following values:\n\n- `cordova.plugins.locationAccuracy.SUCCESS_SETTINGS_SATISFIED`: Success due to current location settings already satisfying requested accuracy.\n- `cordova.plugins.locationAccuracy.SUCCESS_USER_AGREED`: Success due to user agreeing to requested accuracy change\n\n#### Error constants\n\nThe `errorCallback()` function will be pass an object where the \"code\" key may correspond to the following values:\n\n- `cordova.plugins.locationAccuracy.ERROR_ALREADY_REQUESTING`: Error due an unresolved request already being in progress.\n- `cordova.plugins.locationAccuracy.ERROR_INVALID_ACTION`: Error due invalid action requested.\n- `cordova.plugins.locationAccuracy.ERROR_INVALID_ACCURACY`: Error due invalid accuracy requested.\n- `cordova.plugins.locationAccuracy.ERROR_EXCEPTION`: Error due to exception in the native code.\n- `cordova.plugins.locationAccuracy.ERROR_CANNOT_CHANGE_ACCURACY`: Error due to not being able to change location accuracy to requested state.\n- `cordova.plugins.locationAccuracy.ERROR_USER_DISAGREED`: Error due to user rejecting requested accuracy change.\n- `cordova.plugins.locationAccuracy.ERROR_GOOGLE_API_CONNECTION_FAILED`: Error due to failure to connect to Google Play Services API. The \"message\" key will contain a detailed description of the Google Play Services error.\n\n\n# License\n\nThe MIT License\n\nCopyright (c) 2016 Dave Alden (Working Edge Ltd.)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/dpa99c/cordova-plugin-request-location-accuracy.git"
  },
  "scripts": {},
  "version": "2.2.2"
}
