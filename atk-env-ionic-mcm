#!/bin/bash
ENV_NAME=ionic-mcm
NODE_VERSION=v14.17.3

# exit if environment is already active
echo $ATK_ENV | grep "$ENV_NAME" &> /dev/null && echo "Environment $ENV_NAME is already active" && exit

previousNodeVersion=`node --version`
if [ "$previousNodeVersion" != "$NODE_VERSION" ]
	then
	if ! command -v n &> /dev/null
	  then
	    echo "n is not installed -> install now"
	    npm install -g n
    fi
    if ! command -v n &> /dev/null
    	  then
    	    echo "n installation failed -> trying nvm"
    	    if ! command -v nvm &> /dev/null
              then
              echo "NVM is not installed -> install now"
              brew install nvm
            fi
            export NVM_DIR=~/.nvm
            source /usr/local/opt/nvm/nvm.sh
            echo "Switching to Node $NODE_VERSION"
            nvm install $NODE_VERSION
            SWITCHED_NODE_VERSION=true
    else
      echo "Switching to Node $NODE_VERSION"
      N_PREFIX=$HOME/.local n $NODE_VERSION
      SWITCHED_NODE_VERSION=true
    fi
fi
[ -z "$ATK_ENV" ] && export ATK_ENV="$ENV_NAME" || export ATK_ENV="$ATK_ENV,$ENV_NAME"
export PS1="atk-env:$ATK_ENV:\w $ "

function check_global_npm_package {
        echo -n "Checking $1 ..."
        if ! npm list -g "$1" &> /dev/null
                then
                echo " installing ..."
                npm install -g "$1"
        fi
        echo " done"
}

check_global_npm_package cordova@11.0.0
check_global_npm_package @ionic/cli@6.19.0
check_global_npm_package plugman@2.0.0

echo "Shall I run 'npm install' for you? [Y/n]"
read line
[ "$line" = "n" -o "$line" = "N" ] || npm install

bash
[ -n "$SWITCHED_NODE_VERSION" ] && echo "Switching to previous node version: $previousNodeVersion"
